{
  "version": 3,
  "names": [],
  "mappings": "",
  "sources": [
    "app.js"
  ],
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nrequire('./setup/jquery');\n\nrequire('./common');\n\nrequire('./modules/resource');\n\nrequire('./modules/fileManager');\n\nrequire('./modules/events');\n\nrequire('./modules/users');\n\nrequire('./modules/contentBlocks');\n\nrequire('./modules/googleMaps');\n\nvar _config = require('./setup/config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _run = require('./setup/run');\n\nvar _run2 = _interopRequireDefault(_run);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = angular.module('Mezzo', ['ui.router', 'ui.sortable', 'ui.bootstrap', 'mezzo.ui.tinymce', 'pascalprecht.translate', 'ngMessages', 'angular-sortable-view', 'angular-loading-bar', 'ngFileUpload', 'MezzoCommon', 'MezzoResources', 'MezzoFileManager', 'MezzoEvents', 'MezzoUsers', 'MezzoContentBlocks', 'MezzoGoogleMaps']);\n\napp.config(_config2.default);\napp.run(_run2.default);\n\n},{\"./common\":23,\"./modules/contentBlocks\":33,\"./modules/events\":37,\"./modules/fileManager\":48,\"./modules/googleMaps\":49,\"./modules/resource\":62,\"./modules/users\":66,\"./setup/config\":68,\"./setup/jquery\":70,\"./setup/run\":72}],2:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ErrorHandlerService = function () {\n    function ErrorHandlerService() {\n        _classCallCheck(this, ErrorHandlerService);\n    }\n\n    _createClass(ErrorHandlerService, [{\n        key: 'showUnexpected',\n        value: function showUnexpected(err) {\n            var message = JSON.stringify(err);\n\n            if (err.data && err.data.message) {\n                message = err.statusText + '. ' + err.data.message;\n            }\n\n            console.error(err);\n            sweetAlert('Oops, something spilled...', message, 'error');\n            throw err;\n        }\n    }]);\n\n    return ErrorHandlerService;\n}();\n\nexports.default = ErrorHandlerService;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LanguageService = function () {\n    function LanguageService($translate) {\n        _classCallCheck(this, LanguageService);\n\n        this.$translate = $translate;\n\n        this.cache = {};\n\n        //TODO MOVE THIS TO CONFIG\n        this.lang = {\n            de: {\n                attributes: {\n                    gender: {\n                        m: 'Herr',\n                        f: 'Frau'\n                    },\n                    backend: {\n                        1: 'Backend',\n                        0: 'Frontend'\n                    },\n                    confirmed: {\n                        1: 'Bestätigt',\n                        0: 'Unbestätigt'\n                    },\n                    state: {\n                        published: 'Veröffentlicht',\n                        draft: 'Zur Vorlage',\n                        deleted: 'Papierkorb'\n                    }\n                }\n            }\n        };\n    }\n\n    _createClass(LanguageService, [{\n        key: 'get',\n        value: function get(key) {\n            var language = arguments.length <= 1 || arguments[1] === undefined ? 'de' : arguments[1];\n\n            var cacheKey = this.uniqueCacheKey(key, language);\n\n            if (!this.cache[cacheKey]) {\n                this.cache[cacheKey] = this.findInTree(key, language);\n            }\n\n            return this.cache[cacheKey];\n        }\n    }, {\n        key: 'findInTree',\n        value: function findInTree(key, language) {\n            var keyParts = key.split('.');\n\n            var lang = _.clone(this.lang[language]);\n\n            for (var i = 0; i != keyParts.length; i++) {\n                var keyPart = keyParts[i];\n\n                if (lang[keyPart]) {\n                    lang = lang[keyPart];\n                } else {\n                    break;\n                }\n            }\n\n            if (typeof lang != \"string\") {\n                return key;\n            }\n\n            return lang;\n        }\n    }, {\n        key: 'uniqueCacheKey',\n        value: function uniqueCacheKey(key, language) {\n            return key + '[' + language + ']';\n        }\n    }, {\n        key: 'has',\n        value: function has(key) {\n            var language = arguments.length <= 1 || arguments[1] === undefined ? 'de' : arguments[1];\n\n            var translation = this.get(key, language);\n\n            return translation != key;\n        }\n    }, {\n        key: 'bla',\n        value: function bla() {\n            this.$translate('ATTRIBUTES.GENDER').then(function (trans) {\n                console.log(trans);\n            });\n        }\n    }]);\n\n    return LanguageService;\n}();\n\nexports.default = LanguageService;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar QuickviewService = function () {\n    function QuickviewService() {\n        _classCallCheck(this, QuickviewService);\n\n        this.open = false;\n    }\n\n    _createClass(QuickviewService, [{\n        key: \"toggle\",\n        value: function toggle() {\n            this.open = !open;\n        }\n    }]);\n\n    return QuickviewService;\n}();\n\nexports.default = QuickviewService;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RelationInputController = function () {\n\n    /*@ngInject*/\n\n    function RelationInputController(api, $scope, $element, $timeout, eventDispatcher) {\n        var _this = this;\n\n        _classCallCheck(this, RelationInputController);\n\n        this.api = api;\n        this.modelApi = this.api.model(this.related);\n        this.model = null;\n        this.$element = $element;\n        this.models = [];\n        this.selected = null;\n        this.modelsLoaded = false;\n        this.$timeout = $timeout;\n        this.uniqueKey = _.random(10000, 90000);\n\n        this.eventDispatcher = eventDispatcher;\n\n        this.eventDispatcher.on(['form.received', 'relationinput.models_loaded.' + this.uniqueKey], function (events, payloads) {\n            _this.fill(payloads['form.received'].data, payloads['form.received'].form);\n        });\n\n        this.loadModels();\n    }\n\n    _createClass(RelationInputController, [{\n        key: 'loadModels',\n        value: function loadModels() {\n            var _this2 = this;\n\n            var params = {\n                scopes: this.scopes\n            };\n\n            this.modelApi.index(params).then(function (models) {\n                _this2.models = models;\n\n                _this2.modelsLoaded = true;\n\n                _this2.eventDispatcher.makeAndFire('relationinput.models_loaded.' + _this2.uniqueKey, { 'models': models });\n            });\n        }\n    }, {\n        key: 'fill',\n        value: function fill(data, form) {\n            var _this3 = this;\n\n            if (!this.modelsLoaded) {\n                console.error('fill without models loaded');\n            }\n\n            if (form != $(this.$element).parents('form')[0]) return false;\n\n            this.selected = data[this.$element.attr('name')];\n\n            var htmlValue = _.clone(this.selected);\n\n            this.$timeout(function () {\n                if (htmlValue[0]) {\n                    htmlValue = _.map(htmlValue, 'id');\n                }\n\n                $(_this3.$element).val(htmlValue).trigger('change', { 'filledFromApi': true }).blur();\n            });\n        }\n    }]);\n\n    return RelationInputController;\n}();\n\nexports.default = RelationInputController;\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _ModelApi = require('./ModelApi');\n\nvar _ModelApi2 = _interopRequireDefault(_ModelApi);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Api = function () {\n\n    /** @ngInject */\n\n    function Api($http, eventDispatcher) {\n        _classCallCheck(this, Api);\n\n        this.$http = $http;\n        this.eventDispatcher = eventDispatcher;\n        console.log('make api');\n    }\n\n    _createClass(Api, [{\n        key: 'get',\n        value: function get(url) {\n            var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n            var config = {\n                params: params\n            };\n\n            return this.apiPromise(this.$http.get(url, config));\n        }\n    }, {\n        key: 'post',\n        value: function post(url, data) {\n            var config = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n            return this.apiPromise(this.$http.post(url, data, config));\n        }\n    }, {\n        key: 'put',\n        value: function put(url, data) {\n            var config = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n            console.log('put', config);\n            return this.apiPromise(this.$http.put(url, data, config));\n        }\n    }, {\n        key: 'delete',\n        value: function _delete(url) {\n            return this.apiPromise(this.$http.delete(url));\n        }\n    }, {\n        key: 'model',\n        value: function model(modelName) {\n            return new _ModelApi2.default(this, modelName, this.eventDispatcher);\n        }\n    }, {\n        key: 'apiPromise',\n        value: function apiPromise($httpPromise) {\n            return $httpPromise.then(function (response) {\n                return response.data.data;\n            });\n        }\n    }, {\n        key: 'files',\n        value: function files() {\n            return this.get('/api/files');\n        }\n    }, {\n        key: 'moveFile',\n        value: function moveFile(file, folderPath) {\n            var payload = {\n                folder: folderPath\n            };\n\n            return this.put('/api/files/' + file.id, payload);\n        }\n    }, {\n        key: 'deleteFile',\n        value: function deleteFile(file) {\n            return this.delete('/api/files/' + file.id);\n        }\n    }, {\n        key: 'contentBlockTemplate',\n        value: function contentBlockTemplate(hash) {\n            return this.$http.get('/mezzo/content-block-types/' + hash + '.html').then(function (response) {\n                return response.data;\n            }).catch(function (err) {\n                console.error(err);\n            });\n        }\n    }]);\n\n    return Api;\n}();\n\nexports.default = Api;\n\n},{\"./ModelApi\":7}],7:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ModelApi = function () {\n    function ModelApi(api, modelName, eventDispatcher) {\n        _classCallCheck(this, ModelApi);\n\n        this.api = api;\n        this.modelName = modelName;\n\n        this.modelPlural = _.kebabCase(pluralize(this.modelName));\n        this.apiUrl = '/api/' + this.modelPlural;\n        this.eventDispatcher = eventDispatcher;\n    }\n\n    _createClass(ModelApi, [{\n        key: 'index',\n        value: function index() {\n            var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n            return this.api.get(this.apiUrl, params);\n        }\n    }, {\n        key: 'create',\n        value: function create(formData) {\n            return this.api.post(this.apiUrl, formData);\n        }\n    }, {\n        key: 'update',\n        value: function update(modelId, formData) {\n            var config = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n            this.throwEvent('update', { data: formData, id: modelId });\n\n            var request = this.api.put(this.apiUrl + '/' + modelId, formData, config);\n            this.throwEvent('updated', { data: formData, id: modelId });\n\n            return request;\n        }\n    }, {\n        key: 'delete',\n        value: function _delete(modelId) {\n            return this.api.delete(this.apiUrl + '/' + modelId);\n        }\n    }, {\n        key: 'content',\n        value: function content(modelId) {\n            var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n            return this.api.get(this.apiUrl + '/' + modelId, params);\n        }\n    }, {\n        key: 'lock',\n        value: function lock(modelId) {\n            return this.api.get(this.apiUrl + '/' + modelId + '/lock');\n        }\n    }, {\n        key: 'unlock',\n        value: function unlock(modelId) {\n            return this.api.get(this.apiUrl + '/' + modelId + '/unlock');\n        }\n    }, {\n        key: 'throwEvent',\n        value: function throwEvent(name, data) {\n            var payload = _.merge({\n                'modelName': this.modelName\n            }, data);\n\n            this.eventDispatcher.makeAndFire('model.' + name, payload);\n        }\n    }]);\n\n    return ModelApi;\n}();\n\nexports.default = ModelApi;\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = apiService;\n\nvar _Api = require('./Api');\n\nvar _Api2 = _interopRequireDefault(_Api);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*@ngInject*/\nfunction apiService($http, eventDispatcher) {\n    return new _Api2.default($http, eventDispatcher);\n}\n\n},{\"./Api\":6}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = compileDirective;\n/*@ngInject*/\nfunction compileDirective() {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        scope.$watch(attributes.mezzoCompile, function (directive) {\n            if (directive) {\n                var html = '<' + directive + ' >';\n\n                element.html(html);\n                $compile(element.contents())(scope);\n            }\n        });\n    }\n}\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = dateTimePickerDirective;\n/*@ngInject*/\nfunction dateTimePickerDirective() {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var options = {\n            format: 'DD.MM.YYYY HH:mm',\n            showTodayButton: true,\n            showClose: true,\n            calendarWeeks: true,\n            locale: 'de',\n            icons: {\n                time: 'fa fa-clock-o',\n                date: 'fa fa-calendar-o',\n                up: 'fa fa-chevron-up',\n                down: 'fa fa-chevron-down',\n                previous: 'fa fa-chevron-left',\n                next: 'fa fa-chevron-next',\n                today: 'fa fa-crosshairs',\n                clear: 'fa fa-trash-o',\n                close: 'fa fa-times-circle-o'\n            }\n        };\n\n        $(element).on('dp.hide', function () {\n            changed(this);\n            $(this).trigger('change');\n        });\n\n        $(element).datetimepicker(options);\n\n        changed(element);\n\n        function changed(element) {\n            var before = $(element).attr('data-before');\n            var after = $(element).attr('data-after');\n\n            var $before = before ? $(before) : null;\n            var $after = after ? $(after) : null;\n\n            if ($(element).val() == \"\") return true;\n\n            var date = moment($(element).val(), options.format);\n\n            if ($after) {\n                $after.data(\"DateTimePicker\").maxDate(date);\n            }\n\n            if ($before) {\n                $before.data(\"DateTimePicker\").minDate(date);\n            }\n        }\n    }\n}\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = enterDirective;\n/*@ngInject*/\nfunction enterDirective() {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        element.bind('keypress', function (event) {\n            if (event.which === 13) {\n                scope.$eval(attributes.mezzoEnter);\n                scope.$apply();\n            }\n        });\n    }\n}\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Event = function Event(key, payload) {\n    _classCallCheck(this, Event);\n\n    this.key = key;\n    this.payload = payload;\n};\n\nexports.default = Event;\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Listener = require('./Listener');\n\nvar _Listener2 = _interopRequireDefault(_Listener);\n\nvar _Event = require('./Event');\n\nvar _Event2 = _interopRequireDefault(_Event);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EventDispatcherService = function () {\n    function EventDispatcherService() {\n        _classCallCheck(this, EventDispatcherService);\n\n        this.listeners = [];\n        this.eventHistory = [];\n    }\n\n    /**\n     * Execute all the listeners that listen to this event.\n     *\n     * @param {MezzoEvent} event\n     */\n\n    _createClass(EventDispatcherService, [{\n        key: 'fire',\n        value: function fire(event) {\n            this.eventHistory.push(event);\n\n            for (var i in this.listeners) {\n                var listener = this.listeners[i];\n\n                if (!listener.listensTo(event)) {\n                    continue;\n                }\n\n                var execution = listener.execute(event, event.payload);\n\n                if (execution === false) {\n                    console.error('A listener stopped the chain', listener, event);\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        /**\n         * Register a new listener\n         *\n         * @param {Listener} listener\n         */\n\n    }, {\n        key: 'listen',\n        value: function listen(listener) {\n            this.listeners.push(listener);\n        }\n\n        /**\n         * Alias for this.listen\n         *\n         * @param {Listener} listener\n         */\n\n    }, {\n        key: 'register',\n        value: function register(listener) {\n            this.listen(listener);\n        }\n\n        /**\n         * Creates and registers a new listener.\n         *\n         * @param {string} eventKey\n         * @param callback\n         * @returns {Listener}\n         */\n\n    }, {\n        key: 'makeListener',\n        value: function makeListener(eventKey, callback) {\n            var listener = new _Listener2.default(eventKey, callback);\n\n            this.listen(listener);\n\n            return listener;\n        }\n\n        /**\n         * Creates an event and fires it directly.\n         *\n         *\n         * @param eventKey\n         * @param payload\n         */\n\n    }, {\n        key: 'makeAndFire',\n        value: function makeAndFire(eventKey, payload) {\n            var event = new _Event2.default(eventKey, payload);\n\n            return this.fire(event);\n        }\n\n        /**\n         * Alias for makelistener\n         *\n         *\n         * @param eventKey\n         * @param callback\n         * @returns {Listener}\n         */\n\n    }, {\n        key: 'on',\n        value: function on(eventKey, callback) {\n            if (Array.isArray(eventKey)) return this.listenForAll(eventKey, callback);\n\n            return this.makeListener(eventKey, callback);\n        }\n    }, {\n        key: 'listenForAll',\n        value: function listenForAll(eventKeys, callback) {\n            var _this = this;\n\n            var received = {};\n            var payloads = {};\n            var events = {};\n\n            var _loop = function _loop() {\n                var eventKey = eventKeys[i];\n                _this.makeListener(eventKey, function (event, payload) {\n                    received[event.key] = 1;\n                    payloads[eventKey] = payload;\n                    events[eventKey] = event;\n\n                    if (_.size(received) == eventKeys.length) {\n                        callback(events, payloads);\n                    }\n                });\n            };\n\n            for (var i in eventKeys) {\n                _loop();\n            }\n        }\n    }, {\n        key: 'findInHistory',\n        value: function findInHistory(eventKey) {\n            return _.find(this.eventHistory, function (event) {\n                return event.key == eventKey;\n            });\n        }\n    }, {\n        key: 'isInHistory',\n        value: function isInHistory(eventKey) {\n            return !!this.findInHistory(eventKey);\n        }\n    }]);\n\n    return EventDispatcherService;\n}();\n\nexports.default = EventDispatcherService;\n\n},{\"./Event\":12,\"./Listener\":14}],14:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Event = require('./Event');\n\nvar _Event2 = _interopRequireDefault(_Event);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Listener = function () {\n    function Listener(eventKey, callback) {\n        _classCallCheck(this, Listener);\n\n        this.eventKey = eventKey;\n        this.callback = callback;\n    }\n\n    /**\n     * Check if this listener belongs to a certain event.\n     *\n     * @param event\n     * @returns {boolean}\n     */\n\n    _createClass(Listener, [{\n        key: 'listensTo',\n        value: function listensTo(event) {\n            return event.key == this.eventKey;\n        }\n\n        /**\n         * Run the callback with the payload given in the fired event.\n         *\n         * @param {Event} event\n         * @param {object} payload\n         */\n\n    }, {\n        key: 'execute',\n        value: function execute(event, payload) {\n            return this.callback(event, payload);\n        }\n    }]);\n\n    return Listener;\n}();\n\nexports.default = Listener;\n\n},{\"./Event\":12}],15:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FormDataReader = function () {\n    function FormDataReader($form) {\n        _classCallCheck(this, FormDataReader);\n\n        this.$form = $form;\n    }\n\n    _createClass(FormDataReader, [{\n        key: 'read',\n        value: function read() {\n            var formData = {};\n\n            this.$form.find(':input[name]').each(function (index, formInput) {\n                //TODO Move to own function (each edge case gets one)\n                var $formInput = $(formInput);\n                var name = $formInput.attr('name');\n                var value = $formInput.val();\n\n                if ($formInput.is('input[type=radio]')) {\n                    if (!$formInput.prop('checked')) {\n                        return;\n                    }\n                }\n\n                /* Start checkbox edge case */\n                // match checkbox key e.g. categories[1] or categories[10]\n                var regex = /(.+)\\[([0-9]+)\\]/i;\n                var match = name.match(regex);\n\n                if (match && $formInput.is('input[type=checkbox]')) {\n                    var checkboxKey = match[1];\n                    var checkboxId = match[2];\n                    var checkbox = _.get(formData, checkboxKey);\n\n                    if (!_.isArray(checkbox)) {\n                        checkbox = [];\n\n                        _.set(formData, checkboxKey, checkbox);\n                    }\n\n                    if (!$formInput.prop('checked')) {\n                        return;\n                    }\n\n                    checkbox.push(checkboxId);\n\n                    return;\n                }\n\n                if ($formInput.is('input[type=checkbox]')) {\n                    _.set(formData, name, $formInput.prop('checked') ? 1 : 0);\n                    return;\n                }\n                /* End checkbox edge case */\n\n                _.set(formData, name, value);\n            });\n\n            return formData;\n        }\n    }]);\n\n    return FormDataReader;\n}();\n\nexports.default = FormDataReader;\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Event = require('./../events/Event');\n\nvar _Event2 = _interopRequireDefault(_Event);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FormEvent = function (_MezzoEvent) {\n    _inherits(FormEvent, _MezzoEvent);\n\n    function FormEvent(key, payload, form) {\n        _classCallCheck(this, FormEvent);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(FormEvent).call(this, key, payload));\n\n        _this.form = form;\n        return _this;\n    }\n\n    return FormEvent;\n}(_Event2.default);\n\nexports.default = FormEvent;\n\n},{\"./../events/Event\":12}],17:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Listener = require('./../events/Listener');\n\nvar _Listener2 = _interopRequireDefault(_Listener);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FormEventListener = function (_EventListener) {\n    _inherits(FormEventListener, _EventListener);\n\n    function FormEventListener(eventKey, callback, form) {\n        _classCallCheck(this, FormEventListener);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(FormEventListener).call(this, eventKey, callback));\n\n        _this.form = form;\n\n        return _this;\n    }\n\n    /**\n     * Check if this listener belongs to a certain event and the according form.\n     *\n     * @param event\n     * @returns {boolean}\n     */\n\n    _createClass(FormEventListener, [{\n        key: 'listensTo',\n        value: function listensTo(event) {\n            return event.key == this.eventKey && event.form == this.form;\n        }\n    }]);\n\n    return FormEventListener;\n}(_Listener2.default);\n\nexports.default = FormEventListener;\n\n},{\"./../events/Listener\":14}],18:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FormValidationService = function () {\n    function FormValidationService() {\n        _classCallCheck(this, FormValidationService);\n    }\n\n    _createClass(FormValidationService, [{\n        key: 'assign',\n        value: function assign(formInput) {\n            var $formInput = $(formInput);\n            var nameAttribute = $formInput.attr('name');\n\n            if (!nameAttribute) {\n                return;\n            }\n\n            var $formGroup = $formInput.parents('.form-group');\n            var validationMessagesTemplate = '<mezzo-validation-messages data-form-input=\"vm.form[\\'' + nameAttribute + '\\']\"></mezzo-validation-messages>';\n            var ngModel = 'vm.inputs[\\'' + nameAttribute + '\\']';\n\n            this.addModelConnection($formInput, ngModel);\n\n            $formInput.not('[readonly],[disabled]').attr('ng-disabled', 'vm.loading');\n\n            $formGroup.attr('ng-class', 'vm.hasError(\\'' + nameAttribute + '\\')').append(validationMessagesTemplate);\n\n            var isSelect = $formInput.is('select');\n\n            if (isSelect) {\n                var firstOption = $formInput.children(':first');\n\n                if (firstOption.length) {\n                    var selectDefaultValue = firstOption.val();\n\n                    $formInput.attr('ng-init', ngModel + (' = \\'' + selectDefaultValue + '\\''));\n                }\n            }\n        }\n    }, {\n        key: 'addModelConnection',\n        value: function addModelConnection($formInput, ngModelValue) {\n            if ($formInput.is('[type=checkbox],[type=radio]')) {\n                if ($formInput.attr('ng-checked')) return false;\n\n                return $formInput.attr('ng-checked', ngModelValue);\n            }\n\n            if ($formInput.attr('ng-model')) return false;\n\n            return $formInput.attr('ng-model', ngModelValue);\n        }\n    }]);\n\n    return FormValidationService;\n}();\n\nexports.default = FormValidationService;\n\n},{}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = formValidationDirective;\n/*@ngInject*/\nfunction formValidationDirective(formValidationService) {\n    return {\n        restrict: 'A',\n        compile: compile\n    };\n\n    function compile(element) {\n        $(element).find(':input').each(function (index, formInput) {\n            formValidationService.assign(formInput);\n        });\n    }\n}\n\n},{}],20:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = hasControllerService;\n/*@ngInject*/\nfunction hasControllerService($controller) {\n    return hasController;\n\n    function hasController(controllerName) {\n        try {\n            $controller(controllerName);\n\n            return true;\n        } catch (err) {\n            return !(err instanceof TypeError);\n        }\n    }\n}\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = hrefPreventDirective;\n/*@ngInject*/\nfunction hrefPreventDirective() {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        $(element).click(function ($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n        });\n    }\n}\n\n},{}],22:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = hrefReloadDirective;\n/*@ngInject*/\nfunction hrefReloadDirective() {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var shouldReload = attributes.mezzoHrefReload === '1';\n\n        if (!shouldReload) {\n            return;\n        }\n\n        var $element = $(element);\n\n        $element.click(function ($event) {\n            $event.preventDefault();\n            onHrefClick($element);\n        });\n    }\n\n    function onHrefClick($element) {\n        var href = $element.attr('href');\n\n        if (!href) {\n            return;\n        }\n\n        window.location.href = href;\n    }\n}\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nvar _compileDirective = require('./compileDirective');\n\nvar _compileDirective2 = _interopRequireDefault(_compileDirective);\n\nvar _enterDirective = require('./enterDirective.js');\n\nvar _enterDirective2 = _interopRequireDefault(_enterDirective);\n\nvar _relationInputDirective = require('./relationInputDirective');\n\nvar _relationInputDirective2 = _interopRequireDefault(_relationInputDirective);\n\nvar _hrefReloadDirective = require('./hrefReloadDirective');\n\nvar _hrefReloadDirective2 = _interopRequireDefault(_hrefReloadDirective);\n\nvar _hrefPreventDirective = require('./hrefPreventDirective');\n\nvar _hrefPreventDirective2 = _interopRequireDefault(_hrefPreventDirective);\n\nvar _tinymceDirective = require('./tinymceDirective');\n\nvar _tinymceDirective2 = _interopRequireDefault(_tinymceDirective);\n\nvar _select2Directive = require('./select2Directive');\n\nvar _select2Directive2 = _interopRequireDefault(_select2Directive);\n\nvar _dateTimePickerDirective = require('./dateTimePickerDirective');\n\nvar _dateTimePickerDirective2 = _interopRequireDefault(_dateTimePickerDirective);\n\nvar _quickviewDirective = require('./quickviewDirective');\n\nvar _quickviewDirective2 = _interopRequireDefault(_quickviewDirective);\n\nvar _quickviewCloseDirective = require('./quickviewCloseDirective');\n\nvar _quickviewCloseDirective2 = _interopRequireDefault(_quickviewCloseDirective);\n\nvar _formValidationDirective = require('./forms/formValidationDirective');\n\nvar _formValidationDirective2 = _interopRequireDefault(_formValidationDirective);\n\nvar _validationMessagesDirective = require('./validationMessagesDirective');\n\nvar _validationMessagesDirective2 = _interopRequireDefault(_validationMessagesDirective);\n\nvar _uidService = require('./uidService.js');\n\nvar _uidService2 = _interopRequireDefault(_uidService);\n\nvar _apiService = require('./api/apiService');\n\nvar _apiService2 = _interopRequireDefault(_apiService);\n\nvar _hasControllerService = require('./hasControllerService');\n\nvar _hasControllerService2 = _interopRequireDefault(_hasControllerService);\n\nvar _QuickviewService = require('./QuickviewService');\n\nvar _QuickviewService2 = _interopRequireDefault(_QuickviewService);\n\nvar _FormValidationService = require('./forms/FormValidationService');\n\nvar _FormValidationService2 = _interopRequireDefault(_FormValidationService);\n\nvar _LanguageService = require('./LanguageService');\n\nvar _LanguageService2 = _interopRequireDefault(_LanguageService);\n\nvar _ErrorHandlerService = require('./ErrorHandlerService');\n\nvar _ErrorHandlerService2 = _interopRequireDefault(_ErrorHandlerService);\n\nvar _EventDispatcherService = require('./events/EventDispatcherService');\n\nvar _EventDispatcherService2 = _interopRequireDefault(_EventDispatcherService);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = angular.module('MezzoCommon', []);\n\n_module.directive('mezzoCompile', _compileDirective2.default);\n_module.directive('mezzoEnter', _enterDirective2.default);\n_module.directive('mezzoRelationInput', _relationInputDirective2.default);\n_module.directive('mezzoHrefReload', _hrefReloadDirective2.default);\n_module.directive('mezzoHrefPrevent', _hrefPreventDirective2.default);\n_module.directive('mezzoSelect2', _select2Directive2.default);\n_module.directive('mezzoRichtext', _tinymceDirective2.default);\n_module.directive('mezzoDatetimepicker', _dateTimePickerDirective2.default);\n_module.directive('mezzoQuickview', _quickviewDirective2.default);\n_module.directive('mezzoQuickviewClose', _quickviewCloseDirective2.default);\n_module.directive('mezzoFormValidation', _formValidationDirective2.default);\n_module.directive('mezzoValidationMessages', _validationMessagesDirective2.default);\n_module.factory('uid', _uidService2.default);\n_module.factory('api', _apiService2.default);\n_module.factory('hasController', _hasControllerService2.default);\n_module.service('quickviewService', _QuickviewService2.default);\n_module.service('formValidationService', _FormValidationService2.default);\n_module.service('errorHandlerService', _ErrorHandlerService2.default);\n_module.service('languageService', _LanguageService2.default);\n_module.service('eventDispatcher', _EventDispatcherService2.default);\n\n},{\"./ErrorHandlerService\":2,\"./LanguageService\":3,\"./QuickviewService\":4,\"./api/apiService\":8,\"./compileDirective\":9,\"./dateTimePickerDirective\":10,\"./enterDirective.js\":11,\"./events/EventDispatcherService\":13,\"./forms/FormValidationService\":18,\"./forms/formValidationDirective\":19,\"./hasControllerService\":20,\"./hrefPreventDirective\":21,\"./hrefReloadDirective\":22,\"./quickviewCloseDirective\":24,\"./quickviewDirective\":25,\"./relationInputDirective\":26,\"./select2Directive\":27,\"./tinymceDirective\":28,\"./uidService.js\":29,\"./validationMessagesDirective\":30}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = quickviewCloseDirective;\n/*@ngInject*/\nfunction quickviewCloseDirective(quickviewService) {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        $(element).click(function () {\n            quickviewService.open = false;\n\n            scope.$apply();\n        });\n    }\n}\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = quickviewDirective;\n/*@ngInject*/\nfunction quickviewDirective(quickviewService) {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        scope.$watch(function () {\n            return quickviewService.open;\n        }, function (isOpen, wasOpen) {\n            if (isOpen === wasOpen) {\n                return;\n            }\n\n            if (isOpen) {\n                return $(element).addClass('opened');\n            }\n\n            return $(element).removeClass('opened');\n        });\n    }\n}\n\n},{}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = relationInputDirective;\n\nvar _RelationInputController = require('./RelationInputController');\n\nvar _RelationInputController2 = _interopRequireDefault(_RelationInputController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*@ngInject*/\nfunction relationInputDirective() {\n    return {\n        restrict: 'E',\n        templateUrl: '/mezzolabs/mezzo/cockpit/templates/relationInputDirective.html',\n        replace: true,\n        scope: {\n            related: '@',\n            scopes: '@'\n        },\n        controller: _RelationInputController2.default,\n        controllerAs: 'vm',\n        bindToController: true\n    };\n}\n\n},{\"./RelationInputController\":5}],27:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = select2Directive;\n/*@ngInject*/\nfunction select2Directive() {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        $(element).select2();\n    }\n}\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = tinymceDirective;\n/*@ngInject*/\nfunction tinymceDirective() {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var elementId = 'tinymce_textarea-' + parseInt(Math.random() * 999);\n        $(element).addClass('tinymce_textarea ' + elementId);\n        $(element).attr('id', elementId);\n\n        tinyMCE.init({\n            plugins: [\"link\"],\n            selector: '.' + elementId,\n            toolbar: \"undo redo | bold italic underline | link\",\n            menubar: \"\",\n            elementpath: false\n        });\n    }\n}\n\n},{}],29:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = uidService;\nvar id = 0;\n\n/*@ngInject*/\nfunction uidService() {\n    return nextUid;\n}\n\nfunction nextUid() {\n    return id++;\n}\n\n},{}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = validationMessagesDirective;\n/*@ngInject*/\nfunction validationMessagesDirective() {\n    return {\n        restrict: 'E',\n        templateUrl: '/mezzolabs/mezzo/cockpit/templates/validationMessagesDirective.html',\n        scope: {\n            formInput: '='\n        }\n    };\n}\n\n},{}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = compileContentBlockDirective;\n/*@ngInject*/\nfunction compileContentBlockDirective($parse, $compile, formValidationService, eventDispatcher) {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var expression = attributes.mezzoCompileContentBlock;\n        var getter = $parse(expression);\n\n        scope.$watch(getter, function (html) {\n            if (!html) {\n                return;\n            }\n\n            element.html(html);\n            deferFormValidation(element);\n            $compile(element.contents())(scope);\n        });\n\n        function deferFormValidation(element) {\n            setTimeout(function () {\n                assignFormValidation(element);\n            }, 1);\n        }\n\n        function assignFormValidation(element) {\n            element.find('div.form-group :input').each(function (index, formInput) {\n                formValidationService.assign(formInput);\n            });\n            $compile(element.contents())(scope);\n        }\n    }\n}\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = registerContentBlockFactory;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*@ngInject*/\nfunction registerContentBlockFactory($compile, api, eventDispatcher) {\n    return function contentBlockFactory() {\n        return new ContentBlockService($compile, api, eventDispatcher);\n    };\n}\n\nvar ContentBlockService = function () {\n    function ContentBlockService($compile, api, eventDispatcher) {\n        var _this = this;\n\n        _classCallCheck(this, ContentBlockService);\n\n        this.$compile = $compile;\n        this.api = api;\n        this.modelApi = api.model('ContentBlock');\n        this.contentBlocks = [];\n        this.templates = {};\n\n        var base = this;\n\n        eventDispatcher.on('form.updated', function (event, payload) {\n            return _this.onFormUpdate(event, payload);\n        });\n\n        this.sortableOptions = {\n            handle: 'a .ion-arrow-move',\n            setup: function setup(ed) {\n                ed.on('remove', function () {\n                    console.log('mce better remove');\n                });\n            },\n            start: function start(e, ui) {\n                console.log('sort');\n                $(ui.item).parent().find('[ui-tinymce]').each(function () {\n                    $(this).css('opacity', 0.05);\n                    tinymce.execCommand('mceRemoveEditor', false, $(this).attr('id'));\n                });\n            },\n            stop: function stop(e, ui) {\n                $(ui.item).parent().find('[ui-tinymce]').each(function () {\n                    $(this).css('opacity', 1.0);\n                    tinymce.execCommand('mceAddEditor', true, $(this).attr('id'));\n                });\n\n                base.rebaseSortingOnHtml();\n            }\n        };\n        this.currentId = 0;\n    }\n\n    _createClass(ContentBlockService, [{\n        key: 'addContentBlock',\n        value: function addContentBlock(key, hash, title) {\n            var block = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n            var contentBlock = {\n                id: block.id,\n                key: key,\n                sort: block.sort ? block.sort : this.contentBlocks.length + 1,\n                cssClass: 'block__' + key.replace(/\\\\/g, '_'),\n                handle: block.name ? block.name : '',\n                hash: hash,\n                title: title,\n                options: block.options ? block.options : {},\n                nameInForm: this.currentId++,\n                template: null\n            };\n\n            this.fillTemplate(contentBlock);\n            this.contentBlocks.push(contentBlock);\n\n            this.refreshSortings();\n        }\n    }, {\n        key: 'removeContentBlock',\n        value: function removeContentBlock(nameInForm) {\n            var index = this.findIndex(nameInForm);\n\n            if (index === false) {\n                console.error('Cannot find index for name: ' + nameInForm);\n                return false;\n            }\n\n            var block = this.contentBlocks[index];\n\n            if (block.id) {\n                this.modelApi.delete(block.id).then(function () {\n                    toastr.success(block.id + ' deleted');\n                });\n            }\n\n            this.contentBlocks.splice(index, 1);\n\n            this.refreshSortings(true);\n        }\n    }, {\n        key: 'contentBlockOptionsDialog',\n        value: function contentBlockOptionsDialog(nameInForm) {\n            var block = this.contentBlocks[this.findIndex(nameInForm)];\n\n            console.log(block);\n\n            swal({\n                title: 'Options',\n                html: '<div class=\"form-group\">' + '<label>Block Handle</label>' + '<input id=\"handle-name\" type=\"text\" value=\"' + block.handle + '\" class=\"form-control\">' + '</div>',\n                confirmButtonText: 'Set'\n            }, function () {\n\n                block.handle = $('#handle-name').val();\n            });\n        }\n    }, {\n        key: 'findIndex',\n        value: function findIndex(nameInForm) {\n            for (var i in this.contentBlocks) {\n                if (this.contentBlocks[i].nameInForm == nameInForm) return i;\n            }\n\n            return false;\n        }\n    }, {\n        key: 'fillTemplate',\n        value: function fillTemplate(contentBlock) {\n            var _this2 = this;\n\n            var cachedTemplate = this.templates[contentBlock.hash];\n\n            if (cachedTemplate) {\n                return contentBlock.template = cachedTemplate;\n            }\n\n            this.api.contentBlockTemplate(contentBlock.hash).then(function (template) {\n                contentBlock.template = template;\n                _this2.templates[contentBlock.hash] = template;\n            });\n        }\n    }, {\n        key: 'refreshSortings',\n        value: function refreshSortings() {\n            var updateSort = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n            this.contentBlocks = _.sortBy(this.contentBlocks, 'sort');\n\n            if (updateSort == false) {\n                return;\n            }\n\n            for (var i in this.contentBlocks) {\n                this.contentBlocks[i].sort = parseInt(i) + 1;\n            }\n        }\n    }, {\n        key: 'rebaseSortingOnHtml',\n        value: function rebaseSortingOnHtml() {\n            var base = this;\n\n            $('.content-block').each(function (index, element) {\n                var $sort = $(this).find('[name$=\".sort\"]');\n                var nameInForm = $sort.attr('name').replace('.sort', '').split('.');\n                nameInForm = nameInForm[nameInForm.length - 1];\n\n                var block = _.find(base.contentBlocks, function (test) {\n                    return test.nameInForm == nameInForm;\n                });\n\n                block.sort = index + 1;\n            });\n        }\n    }, {\n        key: 'tinyMceModels',\n        value: function tinyMceModels() {}\n    }, {\n        key: 'onFormUpdate',\n        value: function onFormUpdate(event, data) {\n            if (!data.stripped.content) {\n                //console.error('Form update without content.');\n                return true;\n            }\n\n            var contentBlocksData = data.stripped.content.blocks;\n\n            for (var i in this.contentBlocks) {\n                var contentBlock = this.contentBlocks[i];\n\n                for (var j in contentBlocksData) {\n                    var contentBlockData = contentBlocksData[j];\n\n                    if (contentBlockData.sort == contentBlock.sort) {\n\n                        if (contentBlock.id != contentBlockData.id && contentBlock.id != \"\") {\n                            alert('Unexpected error with content block id.');\n                            console.error('Content block ids wont fit.', contentBlock, contentBlockData);\n                        }\n\n                        if (contentBlock.id != contentBlockData.id) {\n                            contentBlock.id = contentBlockData.id;\n                            console.log('assign content block id' + contentBlock.id);\n                        }\n                    }\n                }\n            }\n        }\n    }]);\n\n    return ContentBlockService;\n}();\n\n},{}],33:[function(require,module,exports){\n'use strict';\n\nvar _contentBlockFactory = require('./contentBlockFactory');\n\nvar _contentBlockFactory2 = _interopRequireDefault(_contentBlockFactory);\n\nvar _compileContentBlockDirective = require('./compileContentBlockDirective');\n\nvar _compileContentBlockDirective2 = _interopRequireDefault(_compileContentBlockDirective);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = angular.module('MezzoContentBlocks', []);\n\n_module.factory('contentBlockFactory', _contentBlockFactory2.default);\n_module.directive('mezzoCompileContentBlock', _compileContentBlockDirective2.default);\n\n},{\"./compileContentBlockDirective\":31,\"./contentBlockFactory\":32}],34:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _FormEventListener = require('./../../common/forms/FormEventListener');\n\nvar _FormEventListener2 = _interopRequireDefault(_FormEventListener);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FilePickerController = function () {\n\n    /*@ngInject*/\n\n    function FilePickerController(api, $scope, $element, eventDispatcher) {\n        _classCallCheck(this, FilePickerController);\n\n        this.days = [];\n\n        this.format = 'DD.MM.YYYY HH:mm';\n\n        this.api = api;\n        this.modelApi = api.model('EventDay');\n        this.eventDispatcher = eventDispatcher;\n\n        this.$element = $element;\n        this.$form = $element.parents('form')[0];\n\n        var base = this;\n\n        this.registerListeners();\n\n        this.addDay();\n    }\n\n    _createClass(FilePickerController, [{\n        key: 'registerListeners',\n        value: function registerListeners() {\n            var _this = this;\n\n            var receivedListener = new _FormEventListener2.default('form.received', function (event, mass) {\n                return _this.fill(mass.data.days);\n            }, this.$form);\n\n            var updatedListener = new _FormEventListener2.default('form.updated', function (event, mass) {\n                return _this.fill(mass.stripped.days);\n            }, this.$form);\n\n            this.eventDispatcher.listen(receivedListener);\n            this.eventDispatcher.listen(updatedListener);\n        }\n    }, {\n        key: 'addDay',\n        value: function addDay() {\n            var start = arguments.length <= 0 || arguments[0] === undefined ? \"\" : arguments[0];\n            var end = arguments.length <= 1 || arguments[1] === undefined ? \"\" : arguments[1];\n            var id = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n            this.days.push({\n                start: start, end: end, id: id\n            });\n\n            $(this.$form).find('[data-mezzo-datetimepicker]').trigger('dp.refresh');\n        }\n    }, {\n        key: 'removeDay',\n        value: function removeDay(index) {\n            if (this.days.length <= 1) return false;\n\n            var day = this.days[index];\n\n            if (day.id) {\n                this.removeDayFromServer(day);\n            }\n\n            this.days.splice(index, 1);\n            console.log(this.days, 'removed ' + index);\n        }\n    }, {\n        key: 'removeDayFromServer',\n        value: function removeDayFromServer(day) {\n            this.modelApi.delete(day.id).then(function (response) {\n                console.log(response);\n            }).catch(function (error) {\n                console.log('error', error);\n            });\n        }\n    }, {\n        key: 'fill',\n        value: function fill(days) {\n            if (_.size(days) == 0) {\n                return;\n            }\n\n            this.days = [];\n\n            for (var i in days) {\n                var day = days[i];\n                this.addDay(day.start, day.end, day.id);\n            }\n\n            this.sort();\n        }\n    }, {\n        key: 'onSend',\n        value: function onSend(data) {}\n    }, {\n        key: 'sort',\n        value: function sort() {\n            this.days = this.sortedDays();\n        }\n    }, {\n        key: 'sortedDays',\n        value: function sortedDays() {\n            return _.sortBy(this.days, 'start');\n        }\n    }, {\n        key: 'startChanged',\n        value: function startChanged() {\n            //this.sort();\n        }\n    }, {\n        key: 'getStart',\n        value: function getStart() {\n            return this.getDate(this.sortedDays()[0], 'start');\n        }\n    }, {\n        key: 'getEnd',\n        value: function getEnd() {\n            return this.getDate(this.sortedDays()[this.days.length - 1], 'end');\n        }\n    }, {\n        key: 'getDate',\n        value: function getDate(day, type) {\n\n            if (!day) return null;\n\n            if (!day[type] || day[type] == \"\") return null;\n\n            return moment(day[type], this.format);\n        }\n    }, {\n        key: 'startString',\n        value: function startString() {\n            var start = this.getStart();\n\n            if (!start) return \"...\";\n\n            return start.format('dd, DD.MM.YYYY HH:mm');\n        }\n    }, {\n        key: 'endString',\n        value: function endString() {\n            var end = this.getEnd();\n            if (!end) return \"...\";\n\n            return end.format('dd, DD.MM.YYYY HH:mm');\n        }\n    }]);\n\n    return FilePickerController;\n}();\n\nexports.default = FilePickerController;\n\n},{\"./../../common/forms/FormEventListener\":17}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = eventDaysDirective;\n\nvar _EventDaysController = require('./EventDaysController');\n\nvar _EventDaysController2 = _interopRequireDefault(_EventDaysController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*@ngInject*/\nfunction eventDaysDirective() {\n    return {\n        restrict: 'E',\n        templateUrl: '/mezzolabs/mezzo/cockpit/templates/eventDaysDirective.html',\n        scope: {\n            naming: '@'\n        },\n        controller: _EventDaysController2.default,\n        controllerAs: 'vm',\n        bindToController: true\n    };\n}\n\n},{\"./EventDaysController\":34}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = eventVenueDirective;\n/*@ngInject*/\nfunction eventVenueDirective(api) {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var modelApi = api.model('EventVenue');\n        var $form = $(element).parents('form');\n\n        $(element).on('change', function (e, parameters) {\n            var filledFromApi = parameters && parameters.filledFromApi;\n\n            if (!$(this).val() || $(this).val() == \"\" || filledFromApi) return true;\n\n            modelApi.content($(this).val(), { include: 'address' }).then(function (result) {\n                fillAddress(result.address.data);\n            });\n        });\n\n        function fillAddress(data) {\n            for (var attributeName in data) {\n                var selector = '[name=\"address.' + attributeName + '\"]';\n                var $input = $form.find(selector);\n\n                if ($input.length == 0) {\n                    continue;\n                }\n\n                $input.val(data[attributeName]);\n                $input.trigger('input');\n            }\n        }\n    }\n}\n\n},{}],37:[function(require,module,exports){\n'use strict';\n\nvar _eventDaysDirective = require('./eventDaysDirective');\n\nvar _eventDaysDirective2 = _interopRequireDefault(_eventDaysDirective);\n\nvar _eventVenueDirective = require('./eventVenueDirective');\n\nvar _eventVenueDirective2 = _interopRequireDefault(_eventVenueDirective);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = angular.module('MezzoEvents', []);\n\n_module.directive('mezzoEventDays', _eventDaysDirective2.default);\n_module.directive('mezzoEventVenue', _eventVenueDirective2.default);\n\n},{\"./eventDaysDirective\":35,\"./eventVenueDirective\":36}],38:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Category = function Category(label, icon) {\n    var filter = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n    var everything = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n    _classCallCheck(this, Category);\n\n    this.label = label;\n    this.icon = icon;\n    this.filter = filter;\n    this.everything = everything;\n};\n\nexports.default = Category;\n\n},{}],39:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar File = function () {\n    function File(apiFile) {\n        _classCallCheck(this, File);\n\n        this.id = apiFile.id;\n        this.title = apiFile.filename;\n        this.name = apiFile.filename;\n        this.extension = apiFile.extension;\n        this.addon = apiFile.addon;\n        this.url = apiFile.url;\n        this.type = apiFile.type;\n        this.filePath = apiFile.path;\n        this.isFolder = false;\n    }\n\n    _createClass(File, [{\n        key: 'displayFolderPath',\n        value: function displayFolderPath() {\n            if (this.filePath.indexOf('/') === -1) {\n                return 'Library';\n            }\n\n            var filePathSplitted = this.filePath.split('/');\n\n            return filePathSplitted.slice(0, filePathSplitted.length - 1).join('/');\n        }\n    }, {\n        key: 'displayPath',\n        value: function displayPath() {\n            return this.displayFolderPath() + '/' + this.name;\n        }\n    }, {\n        key: 'icon',\n        value: function icon() {\n            if (this.isImage()) {\n                return 'ion-image';\n            }\n\n            if (this.isVideo()) {\n                return 'ion-ios-videocam';\n            }\n\n            if (this.isAudio()) {\n                return 'ion-music-note';\n            }\n\n            if (this.extension === 'pdf') {\n                return 'ion-printer';\n            }\n\n            return 'ion-document';\n        }\n    }, {\n        key: 'isImage',\n        value: function isImage() {\n            return this.hasExtension('png', 'jpg', 'gif', 'jpeg');\n        }\n    }, {\n        key: 'isVideo',\n        value: function isVideo() {\n            return this.hasExtension('mp4', 'avi');\n        }\n    }, {\n        key: 'isAudio',\n        value: function isAudio() {\n            return this.hasExtension('mp3');\n        }\n    }, {\n        key: 'isDocument',\n        value: function isDocument() {\n            return this.hasExtension('txt', 'md', 'pdf');\n        }\n    }, {\n        key: 'thumbnail',\n        value: function thumbnail() {\n            var size = arguments.length <= 0 || arguments[0] === undefined ? 'thumb' : arguments[0];\n\n            if (this.isImage()) {\n                if (size) {\n                    return this.url + '?size=' + size;\n                }\n\n                return this.url;\n            }\n\n            return false;\n        }\n\n        /* public */\n        /* private */\n\n    }, {\n        key: 'hasExtension',\n        value: function hasExtension() {\n            for (var i = 0; i < arguments.length; i++) {\n                if (this.extension === arguments[i]) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n    }]);\n\n    return File;\n}();\n\nexports.default = File;\n\n},{}],40:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _File = require('./File');\n\nvar _File2 = _interopRequireDefault(_File);\n\nvar _Folder = require('./Folder');\n\nvar _Folder2 = _interopRequireDefault(_Folder);\n\nvar _categories = require('./categories');\n\nvar _categories2 = _interopRequireDefault(_categories);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FileManagerController = function () {\n\n    /*@ngInject*/\n\n    function FileManagerController($scope, api, Upload, quickviewService) {\n        _classCallCheck(this, FileManagerController);\n\n        this.$scope = $scope;\n        this.api = api;\n        this.Upload = Upload;\n        this.quickviewService = quickviewService;\n\n        this.categories = _categories2.default;\n        this.category = this.categories[0];\n        this.orderOptions = ['Title', 'Last modified'];\n        this.orderBy = this.orderOptions[0];\n        this.selected = null;\n        this.loading = false;\n\n        this.initFiles();\n    }\n\n    _createClass(FileManagerController, [{\n        key: 'initFiles',\n        value: function initFiles() {\n            var _this = this;\n\n            var folder = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\n            this.library = new _Folder2.default('Library', null, true);\n            this.folder = this.library;\n            this.files = this.library.files;\n            this.loading = true;\n            var folders = {};\n\n            console.log('folder', this.folder);\n\n            this.api.files().then(function (apiFiles) {\n                _this.loading = false;\n\n                apiFiles.forEach(function (apiFile) {\n                    var file = new _File2.default(apiFile);\n                    var filePath = apiFile.path;\n\n                    if (filePath.indexOf('/') === -1) {\n                        _this.library.files.push(file);\n                        return;\n                    }\n\n                    var filePathArray = filePath.split('/');\n                    var folderPathArray = filePathArray.slice(0, filePathArray.length - 1);\n                    //console.log('folders before:', folders);\n                    var folderForFile = _this.getFolderByPath(folders, folderPathArray);\n                    //console.log('folders after:', folders, folderForFile);\n                    folderForFile.files.push(file);\n                });\n            });\n\n            // Move to the given folder if it is not the Library (Home) folder\n            if (folder && folder.parent) {\n                var newFolder = this.getFolderByPath(folders, folder.pathArray());\n                this.enterFolder(newFolder);\n            }\n        }\n    }, {\n        key: 'getFolderByPath',\n        value: function getFolderByPath(folders, folderPathArray) {\n            if (folderPathArray.length === 0) {\n                return this.library;\n            }\n\n            var previousFolder = this.getFolderByPath(folders, folderPathArray.slice(0, folderPathArray.length - 1));\n            var folderPath = folderPathArray.join('.');\n            var folder = _.get(folders, folderPath);\n\n            if (!folder) {\n                var folderName = folderPathArray[folderPathArray.length - 1];\n                folder = new _Folder2.default(folderName, previousFolder);\n\n                previousFolder.files.push(folder);\n                _.set(folders, folderPath, folder);\n            }\n\n            return folder;\n        }\n    }, {\n        key: 'isActive',\n        value: function isActive(category) {\n            if (category === this.category) {\n                return 'active';\n            }\n        }\n    }, {\n        key: 'selectCategory',\n        value: function selectCategory(category) {\n            this.category = category;\n        }\n    }, {\n        key: 'selectFile',\n        value: function selectFile(file) {\n            if (file === this.selected) {\n                this.selected = null;\n                this.quickviewService.open = false;\n\n                return;\n            }\n\n            this.selected = file;\n            this.quickviewService.open = true;\n        }\n    }, {\n        key: 'enterFolder',\n        value: function enterFolder(file) {\n            if (file.isFolder) {\n                this.folder = file;\n                this.files = file.files;\n            }\n        }\n    }, {\n        key: 'folderHierarchy',\n        value: function folderHierarchy() {\n            var folders = [];\n            var folder = this.folder;\n\n            while (folder) {\n                folders.push(folder);\n\n                folder = folder.parent;\n            }\n\n            return folders.reverse();\n        }\n    }, {\n        key: 'showFolderHierarchy',\n        value: function showFolderHierarchy() {\n            return this.category.everything && !this.search;\n        }\n    }, {\n        key: 'showCategoryAsFolderHierarchy',\n        value: function showCategoryAsFolderHierarchy() {\n            return !this.category.everything && !this.search;\n        }\n    }, {\n        key: 'addFolder',\n        value: function addFolder(name) {\n            if (!name || !name.length) {\n                return false;\n            }\n\n            var newFolder = new _Folder2.default(name, this.folder);\n\n            this.folder.files.push(newFolder);\n        }\n    }, {\n        key: 'getFiles',\n        value: function getFiles() {\n            if (this.search) {\n                return this.searchFiles();\n            }\n\n            var category = this.category;\n\n            if (category.everything) {\n                return this.files;\n            }\n\n            var filteredFiles = [];\n\n            this.allFiles().forEach(function (file) {\n                if (category.filter(file)) {\n                    filteredFiles.push(file);\n                }\n            });\n\n            return filteredFiles;\n        }\n    }, {\n        key: 'searchFiles',\n        value: function searchFiles() {\n            var files = this.allFiles();\n            var found = [];\n            var lowerSearch = this.search.toLowerCase();\n\n            files.forEach(function (file) {\n                if (file.title.toLowerCase().indexOf(lowerSearch) !== -1) {\n                    found.push(file);\n                }\n            });\n\n            return found;\n        }\n    }, {\n        key: 'sortedFiles',\n        value: function sortedFiles() {\n            var files = this.getFiles();\n            var folders = [];\n            var notFolders = [];\n\n            files.forEach(function (file) {\n                if (file.isFolder) {\n                    folders.push(file);\n                } else {\n                    notFolders.push(file);\n                }\n            });\n\n            return folders.concat(notFolders);\n        }\n    }, {\n        key: 'allFiles',\n        value: function allFiles() {\n            var _this2 = this;\n\n            var folder = arguments.length <= 0 || arguments[0] === undefined ? this.library : arguments[0];\n\n            var files = [];\n\n            folder.files.forEach(function (file) {\n                files.push(file);\n\n                if (file.isFolder) {\n                    files = files.concat(_this2.allFiles(file));\n                }\n            });\n\n            return files;\n        }\n    }, {\n        key: 'items',\n        value: function items(file) {\n            var count = 0;\n\n            if (file.isFolder) {\n                count = file.files.length;\n            }\n\n            return count + ' ' + (count === 1 ? 'item' : 'items');\n        }\n    }, {\n        key: 'deleteFiles',\n        value: function deleteFiles() {\n            var _this3 = this;\n\n            var file = this.selected;\n\n            if (file) {\n                swal({\n                    title: 'Sind Sie sicher?',\n                    text: 'Die folgenden Dateien werden unwiderruflich gelöscht: ' + file.title,\n                    type: 'warning',\n                    showCancelButton: true,\n                    confirmButtonText: 'Ja, Dateien löschen!',\n                    confirmButtonColor: '#fb503b',\n                    cancelButtonText: 'Abbrechen'\n                }, function (confirmed) {\n                    if (!confirmed) {\n                        return;\n                    }\n\n                    _this3.selected = null;\n\n                    _this3.deleteFile(file);\n                    _this3.$scope.$apply();\n                });\n            }\n        }\n    }, {\n        key: 'deleteFile',\n        value: function deleteFile(file) {\n            var deleteRemote = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\n            _.remove(this.files, file);\n\n            if (!deleteRemote) {\n                return;\n            }\n\n            this.api.deleteFile(file);\n        }\n    }, {\n        key: 'moveTo',\n        value: function moveTo(folder) {\n            this.moveFile(this.selected, folder);\n            $('#move-modal').modal('hide');\n            this.enterFolder(folder);\n        }\n    }, {\n        key: 'moveFile',\n        value: function moveFile(file, folder) {\n            this.api.moveFile(file, folder.path());\n            this.deleteFile(file, false); // false because we do not want to delete the remote file\n\n            if (file.isFolder) {\n                file.parent = folder;\n            }\n\n            folder.files.push(file);\n        }\n    }, {\n        key: 'upload',\n        value: function upload(file) {\n            var _this4 = this;\n\n            var folder = this.folder;\n\n            this.Upload.upload({\n                url: '/api/files/upload',\n                data: {\n                    file: file,\n                    folder: folder.path()\n                },\n                headers: {\n                    Accept: 'application/vnd.MezzoLabs.v1+json'\n                }\n            }).then(function (response) {\n                _this4.initFiles(folder);\n            }).catch(function (err) {\n                console.error(err);\n            });\n        }\n    }, {\n        key: 'onDrop',\n        value: function onDrop(droppable, draggable) {\n            var files = this.sortedFiles();\n            var folderIndex = $(droppable).data('index');\n            var draggedIndex = $(draggable).data('index');\n            var folder = files[folderIndex];\n            var dragged = files[draggedIndex];\n\n            this.moveFile(dragged, folder);\n            this.$scope.$apply();\n        }\n    }, {\n        key: 'refresh',\n        value: function refresh() {\n            this.initFiles(this.folder);\n        }\n    }, {\n        key: 'canMoveOrDelete',\n        value: function canMoveOrDelete() {\n            if (this.selected && !this.selected.isFolder) {\n                return true;\n            }\n\n            return false;\n        }\n    }, {\n        key: 'addFolderPrompt',\n        value: function addFolderPrompt() {\n            var _this5 = this;\n\n            swal({\n                title: 'Enter new folder name',\n                html: '<input id=\"new-folder-name\" type=\"text\" class=\"form-control\">',\n                confirmButtonText: 'Create folder'\n            }, function () {\n                var newFolderName = $('#new-folder-name').val();\n\n                _this5.addFolder(newFolderName);\n                _this5.$scope.$apply();\n            });\n        }\n    }, {\n        key: 'submitAddon',\n        value: function submitAddon() {\n            var addon = this.selected.addon;\n\n            var addonModelApi = this.addonModelApi(this.selected);\n\n            if (!addonModelApi) {\n                return false;\n            }\n\n            addonModelApi.update(addon.id, _.omit(addon, ['_model', 'id']));\n        }\n    }, {\n        key: 'addonModelApi',\n        value: function addonModelApi(file) {\n            var addon = file.addon;\n\n            if (!addon || addon.length == 0) {\n                return false;\n            }\n\n            return this.api.model(addon._model);\n        }\n    }]);\n\n    return FileManagerController;\n}();\n\nexports.default = FileManagerController;\n\n},{\"./File\":39,\"./Folder\":42,\"./categories\":43}],41:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _File = require('./File');\n\nvar _File2 = _interopRequireDefault(_File);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FilePickerController = function () {\n\n    /*@ngInject*/\n\n    function FilePickerController(api, $scope, eventDispatcher) {\n        _classCallCheck(this, FilePickerController);\n\n        this.api = api;\n        this.files = [];\n        this.preview = null;\n        this.searchText = '';\n        this.eventDispatcher = eventDispatcher;\n        this.uniqueKey = _.random(10000, 90000);\n\n        this.$parent = $scope.$parent;\n\n        this.pagination = {\n            size: 10,\n            current: 1,\n            perPage: 5\n        };\n\n        this.registerListeners();\n\n        this.loadFiles();\n    }\n\n    _createClass(FilePickerController, [{\n        key: 'registerListeners',\n        value: function registerListeners() {\n            var _this = this;\n\n            //Form was already received -> we dont have to wait for the selected value\n            if (this.eventDispatcher.isInHistory('form.received')) {\n                return this.eventDispatcher.on('filepicker.files_loaded.' + this.uniqueKey, function (event, payload) {\n                    _this.selectOldValue();\n                });\n            }\n\n            // Wait for the form content and the possible files before selecting the old value\n            return this.eventDispatcher.on(['form.received', 'filepicker.files_loaded.' + this.uniqueKey], function (events, payloads) {\n                _this.selectOldValue();\n            });\n        }\n    }, {\n        key: 'selectLabel',\n        value: function selectLabel() {\n            var label = 'Select file';\n\n            if (this.isMultiple()) {\n                label += 's';\n            }\n\n            label += \" ( \" + this.selectedFiles().length + \" )\";\n\n            return label;\n        }\n    }, {\n        key: 'showModal',\n        value: function showModal($event) {\n            var target = $event.target;\n\n            $(target).parent().find('.modal').modal();\n        }\n    }, {\n        key: 'loadFiles',\n        value: function loadFiles() {\n            var _this2 = this;\n\n            this.api.files().then(function (apiFiles) {\n                apiFiles.forEach(function (apiFile) {\n                    var file = new _File2.default(apiFile);\n\n                    if (_this2.fileType && file.type !== _this2.fileType) {\n                        return;\n                    }\n\n                    _this2.files.push(file);\n                });\n\n                _this2.filesLoaded();\n            });\n        }\n    }, {\n        key: 'selectAddonIds',\n        value: function selectAddonIds() {\n            return this.fileType == 'image' || this.fileType == 'video';\n        }\n    }, {\n        key: 'filesLoaded',\n        value: function filesLoaded() {\n            this.eventDispatcher.makeAndFire('filepicker.files_loaded.' + this.uniqueKey, { 'files': this.files });\n        }\n    }, {\n        key: 'selectOldValue',\n        value: function selectOldValue() {\n            var value = this.$parent.vm.inputs[this.name];\n\n            if (!value || value == \"\") return false;\n\n            value = String(value);\n\n            if (value.indexOf(',') == -1) {\n                this.selectId(value);\n                this.confirmSelected();\n                return true;\n            }\n\n            var ids = value.split(',');\n            for (var i in ids) {\n                this.selectId(ids[i]);\n            }\n\n            this.confirmSelected();\n\n            return true;\n        }\n    }, {\n        key: 'filteredFiles',\n        value: function filteredFiles() {\n            var _this3 = this;\n\n            if (this.searchText.length > 0) {\n                return this.files.filter(function (file) {\n                    return file.name.indexOf(_this3.searchText) !== -1;\n                });\n            }\n\n            return this.files;\n        }\n    }, {\n        key: 'pagedFiles',\n        value: function pagedFiles() {\n            var files = this.filteredFiles();\n\n            var start = (this.pagination.current - 1) * this.pagination.perPage;\n            var end = this.pagination.current * this.pagination.perPage - 1;\n\n            return files.slice(start, end);\n        }\n    }, {\n        key: 'setPreview',\n        value: function setPreview(file) {\n            if (file.isImage()) {\n                this.preview = file;\n            }\n        }\n    }, {\n        key: 'previewSource',\n        value: function previewSource() {\n            if (this.preview) {\n                return this.preview.url;\n            }\n\n            return '';\n        }\n    }, {\n        key: 'hidePreview',\n        value: function hidePreview() {\n            this.preview = null;\n        }\n    }, {\n        key: 'leftColumnClass',\n        value: function leftColumnClass() {\n            if (this.previewSource()) {\n                return 'col-xs-6';\n            }\n\n            return 'col-xs-12';\n        }\n    }, {\n        key: 'isMultiple',\n        value: function isMultiple() {\n            return this.multiple !== undefined;\n        }\n    }, {\n        key: 'selectId',\n        value: function selectId(id) {\n            var _this4 = this;\n\n            if (!id || id == \"\") return false;\n\n            var file = _.find(this.files, function (file) {\n                return _this4.id(file) == id;\n            });\n\n            file.selected = true;\n        }\n    }, {\n        key: 'onSelect',\n        value: function onSelect(selectedFile) {\n            if (this.isMultiple() || !selectedFile.selected) {\n                return;\n            }\n\n            this.files.forEach(function (file) {\n                return file.selected = false;\n            });\n\n            selectedFile.selected = true;\n        }\n    }, {\n        key: 'selectedFiles',\n        value: function selectedFiles() {\n            return this.files.filter(function (file) {\n                return file.selected;\n            });\n        }\n    }, {\n        key: 'disableSelectButton',\n        value: function disableSelectButton() {\n            return this.selectedFiles().length === 0;\n        }\n    }, {\n        key: 'selectButtonLabel',\n        value: function selectButtonLabel() {\n            var selected = this.selectedFiles().length;\n\n            if (selected === 0) {\n                return 'Please choose a file first';\n            }\n\n            return 'Select ' + selected + ' file' + (selected !== 1 ? 's' : '');\n        }\n    }, {\n        key: 'deselect',\n        value: function deselect(file) {\n            file.selected = false;\n\n            this.confirmSelected();\n        }\n    }, {\n        key: 'confirmSelected',\n        value: function confirmSelected() {\n            this.$parent.vm.inputs[this.name] = this.selectedIdsString();\n        }\n    }, {\n        key: 'selectedIdsString',\n        value: function selectedIdsString() {\n            var _this5 = this;\n\n            var selected = this.selectedFiles();\n\n            if (selected.length === 1) {\n                return this.id(selected[0]);\n            }\n\n            var fileIds = [];\n\n            selected.forEach(function (file) {\n                return fileIds.push(_this5.id(file));\n            });\n\n            return fileIds.join(',');\n        }\n    }, {\n        key: 'countSelected',\n        value: function countSelected() {\n            return this.selectedFiles().length;\n        }\n    }, {\n        key: 'acquireInputValue',\n        value: function acquireInputValue(value) {\n            var _this6 = this;\n\n            var values = [value];\n\n            if (value.indexOf(',') !== -1) {\n                values = value.split(',');\n            }\n\n            for (var i = 0; i < values.length; i++) {\n                values[i] = parseInt(values[i], 10);\n            }\n\n            this.files.forEach(function (file) {\n                if (_.contains(values, _this6.id(file))) {\n                    file.selected = true;\n                }\n            });\n        }\n    }, {\n        key: 'id',\n        value: function id(file) {\n            return this.selectAddonIds() ? file.addon.id : file.id;\n        }\n    }, {\n        key: 'inputField',\n        value: function inputField() {\n            return $('input[name=\"' + this.name + '\"]');\n        }\n    }]);\n\n    return FilePickerController;\n}();\n\nexports.default = FilePickerController;\n\n},{\"./File\":39}],42:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _File2 = require('./File');\n\nvar _File3 = _interopRequireDefault(_File2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Folder = function (_File) {\n    _inherits(Folder, _File);\n\n    function Folder(name) {\n        var parent = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n        var skipInPath = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n        _classCallCheck(this, Folder);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Folder).call(this, {\n            id: '',\n            filename: name,\n            extension: '',\n            url: ''\n        }));\n\n        _this.parent = parent;\n        _this.skipInPath = skipInPath;\n        _this.type = 'folder';\n        _this.isFolder = true;\n        _this.files = [];\n        return _this;\n    }\n\n    _createClass(Folder, [{\n        key: 'displayFolderPath',\n        value: function displayFolderPath() {\n            return this.path();\n        }\n    }, {\n        key: 'path',\n        value: function path() {\n            if (this.skipInPath) {\n                return '';\n            }\n\n            return '/' + this.pathArray().join('/');\n        }\n    }, {\n        key: 'pathArray',\n        value: function pathArray() {\n            var folders = [this.name];\n            var folder = this;\n\n            while (folder.parent) {\n                if (folder.parent.skipInPath) {\n                    break;\n                }\n\n                folders.push(folder.parent.name);\n\n                folder = folder.parent;\n            }\n\n            folders.reverse();\n\n            return folders;\n        }\n    }]);\n\n    return Folder;\n}(_File3.default);\n\nexports.default = Folder;\n\n},{\"./File\":39}],43:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Category = require('./Category');\n\nvar _Category2 = _interopRequireDefault(_Category);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = [new _Category2.default('Everything', 'ion-ios-home', null, true), new _Category2.default('Images', 'ion-ios-photos', imageFilter), new _Category2.default('Videos', 'ion-ios-videocam', videoFilter), new _Category2.default('Audio', 'ion-ios-mic', audioFilter), new _Category2.default('Documents', 'ion-ios-paper', documentFilter)];\n\nfunction imageFilter(file) {\n    return file.isImage();\n}\n\nfunction videoFilter(file) {\n    return file.isVideo();\n}\n\nfunction audioFilter(file) {\n    return file.isAudio();\n}\n\nfunction documentFilter(file) {\n    return file.isDocument();\n}\n\n},{\"./Category\":38}],44:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = draggableDirective;\nfunction draggableDirective() {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var droppable = attributes.mezzoDraggable;\n\n        if (droppable === 'false') {\n            return;\n        }\n\n        $(element).draggable({\n            axis: 'y',\n            containment: 'table',\n            helper: 'clone',\n            revert: true\n        });\n    }\n}\n\n},{}],45:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = droppableDirective;\nfunction droppableDirective() {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var $element = $(element);\n        var droppable = attributes.mezzoDroppable;\n        var controller = scope.vm;\n\n        if (droppable === 'true') {\n            $element.droppable({\n                hoverClass: 'success',\n                drop: function drop(event, ui) {\n                    var draggable = ui.draggable;\n\n                    ui.helper.remove();\n                    controller.onDrop(element, draggable);\n                }\n            });\n        }\n    }\n}\n\n},{}],46:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = filePickerDirective;\n\nvar _FilePickerController = require('./FilePickerController');\n\nvar _FilePickerController2 = _interopRequireDefault(_FilePickerController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*@ngInject*/\nfunction filePickerDirective() {\n    return {\n        restrict: 'E',\n        templateUrl: '/mezzolabs/mezzo/cockpit/templates/filePickerDirective.html',\n        scope: {\n            fileType: '@',\n            fieldName: '@',\n            multiple: '@',\n            name: '@',\n            value: '@'\n        },\n        controller: _FilePickerController2.default,\n        controllerAs: 'vm',\n        bindToController: true\n    };\n}\n\n},{\"./FilePickerController\":41}],47:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = filePickerValueDirective;\n/*@ngInject*/\nfunction filePickerValueDirective() {\n    return {\n        require: '^mezzoFilePicker',\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes, controller) {\n        scope.$watch(function () {\n            return $(element).val();\n        }, function (newValue, oldValue) {\n            if (newValue === oldValue || newValue === undefined) {\n                return;\n            }\n\n            controller.acquireInputValue(newValue);\n        });\n    }\n}\n\n},{}],48:[function(require,module,exports){\n'use strict';\n\nvar _draggableDirective = require('./draggableDirective.js');\n\nvar _draggableDirective2 = _interopRequireDefault(_draggableDirective);\n\nvar _droppableDirective = require('./droppableDirective.js');\n\nvar _droppableDirective2 = _interopRequireDefault(_droppableDirective);\n\nvar _filePickerDirective = require('./filePickerDirective');\n\nvar _filePickerDirective2 = _interopRequireDefault(_filePickerDirective);\n\nvar _filePickerValueDirective = require('./filePickerValueDirective');\n\nvar _filePickerValueDirective2 = _interopRequireDefault(_filePickerValueDirective);\n\nvar _FileManagerController = require('./FileManagerController');\n\nvar _FileManagerController2 = _interopRequireDefault(_FileManagerController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = angular.module('MezzoFileManager', []);\n\n_module.directive('mezzoDraggable', _draggableDirective2.default);\n_module.directive('mezzoDroppable', _droppableDirective2.default);\n_module.directive('mezzoFilePicker', _filePickerDirective2.default);\n//module.directive('mezzoFilePickerValue', filePickerValueDirective);\n_module.controller('CreateFileController', _FileManagerController2.default);\n\n},{\"./FileManagerController\":40,\"./draggableDirective.js\":44,\"./droppableDirective.js\":45,\"./filePickerDirective\":46,\"./filePickerValueDirective\":47}],49:[function(require,module,exports){\n'use strict';\n\nvar _mapService = require('./mapService');\n\nvar _mapService2 = _interopRequireDefault(_mapService);\n\nvar _mapDirective = require('./mapDirective');\n\nvar _mapDirective2 = _interopRequireDefault(_mapDirective);\n\nvar _searchDirective = require('./searchDirective');\n\nvar _searchDirective2 = _interopRequireDefault(_searchDirective);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = angular.module('MezzoGoogleMaps', []);\n\n_module.factory('mapService', _mapService2.default);\n_module.directive('mezzoGoogleMap', _mapDirective2.default);\n_module.directive('mezzoGoogleMapsSearch', _searchDirective2.default);\n\n},{\"./mapDirective\":50,\"./mapService\":51,\"./searchDirective\":52}],50:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = mapDirective;\n/*@ngInject*/\nfunction mapDirective(mapService) {\n    return {\n        restrict: 'A',\n        scope: {\n            latitude: '@',\n            longitude: '@'\n        },\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var actualElement = element[0];\n        var map = new google.maps.Map(actualElement, {\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            zoom: 8,\n            center: { lat: -33.8688, lng: 151.2195 }\n        });\n\n        setupLatitudeLongitudeWatches();\n\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function (position) {\n                var currentLatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\n                map.setCenter(currentLatLng);\n            });\n        }\n\n        $('a[data-toggle=\"tab\"]').on('shown.bs.tab', function () {\n            google.maps.event.trigger(map, 'resize');\n        });\n\n        mapService.receivePlace = receivePlace;\n\n        function receivePlace(place) {\n            var marker = new google.maps.Marker({\n                map: map,\n                anchorPoint: new google.maps.Point(0, -29)\n            });\n\n            marker.setVisible(false);\n\n            if (!place.geometry) {\n                return;\n            }\n\n            // If the place has a geometry, then present it on a map.\n            if (place.geometry.viewport) {\n                map.fitBounds(place.geometry.viewport);\n            } else {\n                map.setCenter(place.geometry.location);\n                map.setZoom(17); // Why 17? Because it looks good.\n            }\n            marker.setIcon({\n                url: place.icon,\n                size: new google.maps.Size(71, 71),\n                origin: new google.maps.Point(0, 0),\n                anchor: new google.maps.Point(17, 34),\n                scaledSize: new google.maps.Size(35, 35)\n            });\n            marker.setPosition(place.geometry.location);\n            marker.setVisible(true);\n        }\n\n        function setupLatitudeLongitudeWatches() {\n            var coordinates = {\n                latitude: undefined,\n                longitude: undefined\n            };\n            var latitudeName = scope.latitude;\n            var longitudeName = scope.longitude;\n            var $latitude = getElementByName(latitudeName);\n            var $longitude = getElementByName(longitudeName);\n\n            $latitude.on('input', onLatitudeChange);\n            $longitude.on('input', onLongitudeChange);\n\n            function onLatitudeChange(event, extraParams) {\n                if (extraParams !== 'triggeredByFormDataService') {\n                    return;\n                }\n\n                coordinates.latitude = $latitude.val();\n\n                tryUpdatingMap();\n            }\n\n            function onLongitudeChange(event, extraParams) {\n                if (extraParams !== 'triggeredByFormDataService') {\n                    return;\n                }\n\n                coordinates.longitude = $longitude.val();\n\n                tryUpdatingMap();\n            }\n\n            function tryUpdatingMap() {\n                if (!coordinates.latitude || !coordinates.longitude) {\n                    return; // Cannot update map without both coordinates\n                }\n\n                var geocoder = new google.maps.Geocoder();\n                var location = {\n                    location: {\n                        lat: parseFloat(coordinates.latitude),\n                        lng: parseFloat(coordinates.longitude)\n                    }\n                };\n\n                geocoder.geocode(location, function (results, status) {\n                    if (status !== google.maps.GeocoderStatus.OK || results.length === 0) {\n                        return;\n                    }\n\n                    receivePlace(results[0]);\n                });\n            }\n        }\n\n        function getElementByName(name) {\n            return $('[name=\"' + name + '\"]');\n        }\n    }\n}\n\n},{}],51:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = mapService;\n/*@ngInject*/\nfunction mapService() {\n    return {\n        map: null\n    };\n}\n\n},{}],52:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = searchDirective;\n/*@ngInject*/\nfunction searchDirective(mapService) {\n    return {\n        restrict: 'A',\n        scope: {\n            streetNumber: '@',\n            street: '@',\n            city: '@',\n            state: '@',\n            country: '@',\n            postalCode: '@',\n            latitude: '@',\n            longitude: '@'\n        },\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var input = element[0];\n        var autoCompleteOptions = {\n            types: ['geocode']\n        };\n        var autoComplete = new google.maps.places.Autocomplete(input, autoCompleteOptions);\n\n        autoComplete.addListener('place_changed', function () {\n            var place = autoComplete.getPlace();\n            var latitude = place.geometry.location.lat();\n            var longitude = place.geometry.location.lng();\n            var addressComponents = place.address_components;\n            var componentForm = {\n                street_number: {\n                    key: 'short_name',\n                    selector: scope.streetNumber\n                },\n                route: {\n                    key: 'long_name',\n                    selector: scope.street\n                },\n                locality: {\n                    key: 'long_name',\n                    selector: scope.city\n                },\n                administrative_area_level_1: {\n                    key: 'long_name',\n                    selector: scope.state\n                },\n                country: {\n                    key: 'long_name',\n                    selector: scope.country\n                },\n                postal_code: {\n                    key: 'short_name',\n                    selector: scope.postalCode\n                }\n            };\n\n            setInputValue(scope.latitude, latitude);\n            setInputValue(scope.longitude, longitude);\n\n            addressComponents.forEach(function (component) {\n                var componentType = component.types[0];\n                var componentOptions = componentForm[componentType];\n\n                if (componentOptions) {\n                    var componentKey = componentOptions.key;\n                    var componentSelector = componentOptions.selector;\n                    var componentValue = component[componentKey];\n\n                    setInputValue(componentSelector, componentValue);\n                }\n            });\n\n            if (mapService.receivePlace) {\n                mapService.receivePlace(place);\n            }\n        });\n\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function (position) {\n                var geolocation = {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                };\n                var circle = new google.maps.Circle({\n                    center: geolocation,\n                    radius: position.coords.accuracy\n                });\n                var bounds = circle.getBounds();\n\n                autoComplete.setBounds(bounds);\n            });\n        }\n    }\n\n    function setInputValue(name, value) {\n        console.log(name, value);\n        $('[name=\"' + name + '\"]').val(value).trigger('input');\n    }\n}\n\n},{}],53:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    INDEX: 'index',\n    CREATE: 'create',\n    EDIT: 'edit',\n    SHOW: 'show'\n};\n\n},{}],54:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _ResourceController2 = require('./ResourceController');\n\nvar _ResourceController3 = _interopRequireDefault(_ResourceController2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CreateResourceController = function (_ResourceController) {\n    _inherits(CreateResourceController, _ResourceController);\n\n    /*@ngInject*/\n\n    function CreateResourceController($injector) {\n        _classCallCheck(this, CreateResourceController);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(CreateResourceController).call(this, $injector));\n    }\n\n    _createClass(CreateResourceController, [{\n        key: 'init',\n        value: function init(modelName) {\n            this.modelName = modelName;\n            this.modelApi = this.api.model(this.modelName);\n        }\n    }, {\n        key: 'doSubmit',\n        value: function doSubmit(formData) {\n            var _this2 = this;\n\n            return this.modelApi.create(formData).then(function (model) {\n                _this2.edit(model.id);\n                toastr.success('Success! ' + model._label + ' created');\n            });\n        }\n    }, {\n        key: 'edit',\n        value: function edit(modelId) {\n            this.modelStateService.name(this.modelName).id(modelId).edit();\n        }\n    }]);\n\n    return CreateResourceController;\n}(_ResourceController3.default);\n\nexports.default = CreateResourceController;\n\n},{\"./ResourceController\":59}],55:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _ResourceController2 = require('./ResourceController');\n\nvar _ResourceController3 = _interopRequireDefault(_ResourceController2);\n\nvar _FormEvent = require('./../../common/forms/FormEvent');\n\nvar _FormEvent2 = _interopRequireDefault(_FormEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EditResourceController = function (_ResourceController) {\n    _inherits(EditResourceController, _ResourceController);\n\n    /*@ngInject*/\n\n    function EditResourceController($injector, $scope) {\n        _classCallCheck(this, EditResourceController);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(EditResourceController).call(this, $injector));\n\n        _this.$scope = $scope;\n        _this.$stateParams = $injector.get('$stateParams');\n        _this.$rootScope = $injector.get('$rootScope');\n        _this.eventDispatcher = $injector.get('eventDispatcher');\n        _this.modelId = _this.$stateParams.modelId;\n        _this.content = {};\n\n        _this.includes = ['content'];\n\n        _this.$scope.$on('$destroy', function () {\n            return _this.onDestroy();\n        });\n        return _this;\n    }\n\n    _createClass(EditResourceController, [{\n        key: 'init',\n        value: function init(modelName) {\n            var includes = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n            this.modelName = modelName;\n            this.modelApi = this.api.model(modelName);\n            this.includes = includes;\n\n            if (!_.includes(this.includes, 'content')) {\n                this.includes.push('content');\n            }\n\n            this.loadContent();\n        }\n    }, {\n        key: 'doSubmit',\n        value: function doSubmit(formData) {\n            var _this2 = this;\n\n            return this.modelApi.update(this.modelId, formData, { params: { include: this.includes.join(',') } }).then(function (model) {\n                _this2.fireEvent('form.updated', _this2.formDataService.transform(model));\n                toastr.success('Success! ' + model._label + ' updated');\n            });\n        }\n    }, {\n        key: 'loadContent',\n        value: function loadContent() {\n            var _this3 = this;\n\n            var params = {\n                include: this.includes.join(',')\n            };\n            this.loading = true;\n\n            this.modelApi.content(this.modelId, params).then(function (model) {\n                _this3.contentLoaded(model);\n            });\n        }\n    }, {\n        key: 'contentLoaded',\n        value: function contentLoaded(model) {\n            this.initContentBlocks(model);\n            this.initLockable(model);\n\n            var cleaned = this.formDataService.transform(model);\n\n            this.content = cleaned.stripped;\n            this.inputs = cleaned.flattened;\n            this.loading = false;\n\n            this.eventDispatcher.fire(new _FormEvent2.default('form.received', {\n                data: cleaned.stripped,\n                flattened: cleaned.flattened,\n                form: this.htmlForm()[0]\n            }, this.htmlForm()[0]));\n        }\n    }, {\n        key: 'initContentBlocks',\n        value: function initContentBlocks(model) {\n            var _this4 = this;\n\n            if (!model.content || !model.content.data.blocks) {\n                return;\n            }\n\n            var blocks = model.content.data.blocks.data;\n\n            blocks.forEach(function (block) {\n                var hash = md5(block.class);\n\n                _this4.contentBlockService.addContentBlock(block.class, hash, block._label, block);\n            });\n        }\n    }, {\n        key: 'startResourceLocking',\n        value: function startResourceLocking() {\n            var _this5 = this;\n\n            var thirtySeconds = 30 * 1000;\n            this.lockTask = setInterval(function () {\n                return _this5.lock();\n            }, thirtySeconds);\n\n            this.lock();\n        }\n    }, {\n        key: 'stopResourceLocking',\n        value: function stopResourceLocking() {\n            if (this.lockTask) {\n                clearInterval(this.lockTask);\n                this.unlock();\n            }\n        }\n    }, {\n        key: 'lock',\n        value: function lock() {\n            this.modelApi.lock(this.modelId);\n        }\n    }, {\n        key: 'unlock',\n        value: function unlock() {\n            this.modelApi.unlock(this.modelId);\n        }\n    }, {\n        key: 'onDestroy',\n        value: function onDestroy() {\n            this.stopResourceLocking();\n        }\n    }, {\n        key: 'initLockable',\n        value: function initLockable(model) {\n            this.isLockable = _.has(model, '_locked_by');\n\n            if (!this.isLockable) {\n                return;\n            }\n\n            if (model._locked_for_user) {\n                return this.redirectToIndex(model._locked_by);\n            }\n\n            this.startResourceLocking();\n        }\n    }, {\n        key: 'redirectToIndex',\n        value: function redirectToIndex(lockedBy) {\n            var title = 'Oops...';\n            var message = 'You are not allowed to edit this resource while it is locked by ' + lockedBy + '!';\n\n            this.modelStateService.name(this.modelName).index();\n            sweetAlert(title, message, 'error');\n        }\n    }]);\n\n    return EditResourceController;\n}(_ResourceController3.default);\n\nexports.default = EditResourceController;\n\n},{\"./../../common/forms/FormEvent\":16,\"./ResourceController\":59}],56:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _EditResourceController = require('./EditResourceController');\n\nvar _EditResourceController2 = _interopRequireDefault(_EditResourceController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EditSubscriptionsController = function (_EditResourceControll) {\n    _inherits(EditSubscriptionsController, _EditResourceControll);\n\n    /*@ngInject*/\n\n    function EditSubscriptionsController($injector, $scope) {\n        _classCallCheck(this, EditSubscriptionsController);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(EditSubscriptionsController).call(this, $injector, $scope));\n\n        _this.subscriptionsApi = _this.api.model('Subscription');\n        $('#updatemeplease').attr('ng-model', 'vm.updatemeplease');\n\n        _this.updatemeplease = \"updated\";\n\n        $('#updatemeplease').trigger('input');\n\n        return _this;\n    }\n\n    _createClass(EditSubscriptionsController, [{\n        key: 'contentLoaded',\n        value: function contentLoaded(model) {\n            var _this2 = this;\n\n            _get(Object.getPrototypeOf(EditSubscriptionsController.prototype), 'contentLoaded', this).call(this, model);\n\n            this.$timeout(function () {\n                console.log('trigger input');\n                _this2.htmlForm().find(':input').trigger('input');\n\n                _this2.updatemeplease = \"updated 2\";\n\n                _this2.$scope.$apply();\n            });\n\n            this.sortSubscriptions();\n        }\n\n        /**\n         * Strip the data tags and update the subscriptions on the screen.\n         * @param response\n         */\n\n    }, {\n        key: 'onUpdated',\n        value: function onUpdated(response, request) {\n            var _this3 = this;\n\n            _get(Object.getPrototypeOf(EditSubscriptionsController.prototype), 'onUpdated', this).call(this, response, request);\n\n            this.subscriptionsApi.index({ 'user': this.modelId }).then(function (response) {\n                _this3.content.subscriptions = _.values(_this3.formDataService.transform(response));\n                _this3.sortSubscriptions();\n            });\n        }\n    }, {\n        key: 'timeLeft',\n        value: function timeLeft(subscription) {\n            return this.subscribedUntilDate(subscription).fromNow();\n        }\n    }, {\n        key: 'subscribedUntilDate',\n        value: function subscribedUntilDate(subscription) {\n            return moment(subscription.subscribed_until, 'DD.MM.YYYY HH:mm');\n        }\n    }, {\n        key: 'sortSubscriptions',\n        value: function sortSubscriptions() {\n            var _this4 = this;\n\n            this.content.subscriptions = _.sortBy(this.content.subscriptions, function (s) {\n                return _this4.subscribedUntilDate(s).format('X');\n            }).reverse();\n        }\n    }, {\n        key: 'changeCancel',\n        value: function changeCancel(subscription) {\n            var cancelled = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];\n\n            this.subscriptionsApi.update(subscription.id, {\n                'cancelled': cancelled\n            }).then(function () {\n                subscription.cancelled = cancelled;\n            });\n        }\n    }, {\n        key: 'deleteSubscription',\n        value: function deleteSubscription(subscription) {\n            var _this5 = this;\n\n            this.subscriptionsApi.delete(subscription.id).then(function () {\n                var index = _this5.content.subscriptions.indexOf(subscription);\n                _this5.content.subscriptions.splice(index, 1);\n            });\n        }\n    }]);\n\n    return EditSubscriptionsController;\n}(_EditResourceController2.default);\n\nexports.default = EditSubscriptionsController;\n\n},{\"./EditResourceController\":55}],57:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IndexResourceController = function () {\n\n    /*@ngInject*/\n\n    function IndexResourceController($scope, api, modelStateService, languageService) {\n        _classCallCheck(this, IndexResourceController);\n\n        this.$scope = $scope;\n        this.api = api;\n        this.lang = languageService;\n        this.modelStateService = modelStateService;\n        this.includes = [];\n        this.language = languageService;\n        this.models = [];\n        this.modelValues = {};\n        this.searchText = '';\n        this.searchText = '';\n        this.selectAll = false;\n        this.loading = false;\n        this.attributes = {};\n        this.perPage = 10;\n        this.currentPage = 1;\n        this.pagination = {\n            size: 10\n        };\n    }\n\n    _createClass(IndexResourceController, [{\n        key: 'init',\n        value: function init(modelName, defaultIncludes) {\n            this.modelName = modelName;\n            this.modelApi = this.api.model(modelName);\n            this.includes = defaultIncludes;\n\n            this.loadModels();\n        }\n    }, {\n        key: 'addAttribute',\n        value: function addAttribute(name, type) {\n\n            this.attributes[name] = { name: name, type: type, order: '', filter: '' };\n        }\n    }, {\n        key: 'attribute',\n        value: function attribute(name) {\n            return _.find(this.attributes, ['name', name]);\n        }\n    }, {\n        key: 'loadModels',\n        value: function loadModels() {\n            var _this = this;\n\n            var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n            this.loading = true;\n            params.include = this.includes.join(',');\n\n            return this.modelApi.index(params).then(function (data) {\n                _this.loading = false;\n                _this.models = data;\n\n                _this.models.forEach(function (model) {\n                    return model._meta = {};\n                });\n            });\n        }\n    }, {\n        key: 'getModels',\n        value: function getModels() {\n            if (this.searchText.length > 0 || this.hasFilters()) {\n                return this.search();\n            }\n\n            return this.models;\n        }\n    }, {\n        key: 'hasFilters',\n        value: function hasFilters() {\n            for (var i in this.attributes) {\n                if (this.attributes[i].filter != \"\") return true;\n            }\n\n            return false;\n        }\n    }, {\n        key: 'getPagedModels',\n        value: function getPagedModels() {\n            var models = this.getModels();\n\n            var start = (this.currentPage - 1) * this.perPage;\n            var end = this.currentPage * this.perPage - 1;\n\n            return models.slice(start, end);\n        }\n    }, {\n        key: 'getModelKeys',\n        value: function getModelKeys(model) {\n            if (this.models.length > 0 && !model) {\n                model = this.models[0];\n            }\n\n            if (!model) {\n                return [];\n            }\n\n            var keys = Object.keys(model);\n\n            return keys.filter(function (key) {\n                return key !== '_meta' && model.hasOwnProperty(key);\n            });\n        }\n    }, {\n        key: 'getModelValues',\n        value: function getModelValues(model) {\n            var values = {};\n\n            for (var i in this.attributes) {\n                var attribute = this.attributes[i];\n                values[attribute.name] = this.transformModelValue(attribute, model[attribute.name]);\n            }\n\n            this.modelValues[model.id] = values;\n\n            return values;\n        }\n    }, {\n        key: 'transformModelValue',\n        value: function transformModelValue(attribute, value) {\n\n            if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === \"object\") {\n                if (Object.prototype.toString.call(value.data) === \"[object Array]\") {\n                    return this.transformArrayValueToString(name, value.data);\n                }\n\n                if (Object.prototype.toString.call(value.data) === \"[object Object]\") {\n                    return this.transformObjectValueToString(name, value.data);\n                }\n            }\n\n            if (value && attribute.type == \"datetime\") {\n                return moment(value).format('DD.MM.YYYY hh:mm');\n            }\n\n            if (value && attribute.type == \"distance\") {\n                return parseFloat(value);\n            }\n\n            if (this.lang.has('attributes.' + attribute.name + '.' + value)) {\n                return this.lang.get('attributes.' + attribute.name + '.' + value);\n            }\n\n            if (attribute.type == \"boolean\") {\n                return this.lang.get('attributes.boolean.' + (value == \"1\") ? \"true\" : \"false\");\n            }\n\n            return value;\n        }\n    }, {\n        key: 'transformArrayValueToString',\n        value: function transformArrayValueToString(name, array) {\n            var labels = [];\n\n            for (var i in array) {\n                labels.push(this.transformObjectValueToString(name, array[i]));\n            }\n\n            return labels.join(', ');\n        }\n    }, {\n        key: 'transformObjectValueToString',\n        value: function transformObjectValueToString(name, object) {\n            return object._label;\n        }\n    }, {\n        key: 'canEdit',\n        value: function canEdit() {\n            return this.selected().length === 1;\n        }\n    }, {\n        key: 'canRemove',\n        value: function canRemove() {\n            return this.selected().length > 0;\n        }\n    }, {\n        key: 'search',\n        value: function search() {\n            var _this2 = this;\n\n            var searched = this.models.filter(function (model) {\n                return _this2.modelIsInSearch(model) && _this2.modelIsInFilters(model);\n            });\n\n            return searched;\n        }\n    }, {\n        key: 'modelIsInSearch',\n        value: function modelIsInSearch(model) {\n            if (this.searchText.length == 0) {\n                return true;\n            }\n\n            for (var key in model) {\n                if (model.hasOwnProperty(key)) {\n                    var value = model[key];\n\n                    if (String(value).toLowerCase().indexOf(this.searchText.toLowerCase()) !== -1) {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        }\n    }, {\n        key: 'modelIsInFilters',\n        value: function modelIsInFilters(model) {\n            var values = this.modelValues[model.id];\n\n            for (var key in values) {\n                var value = values[key];\n                var attribute = this.attribute(key);\n\n                if (!attribute || !attribute.filter || attribute.filter == \"\") continue;\n\n                if (!value) {\n                    return false;\n                }\n\n                if (String(value).toLowerCase().indexOf(attribute.filter.toLowerCase()) === -1) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    }, {\n        key: 'updateSelectAll',\n        value: function updateSelectAll() {\n            var _this3 = this;\n\n            var models = this.getModelsgetModels();\n\n            models.forEach(function (model) {\n                return model._meta.selected = _this3.selectAll;\n            });\n        }\n    }, {\n        key: 'selected',\n        value: function selected() {\n            return this.models.filter(function (model) {\n                return model._meta.selected;\n            });\n        }\n    }, {\n        key: 'create',\n        value: function create() {}\n    }, {\n        key: 'editId',\n        value: function editId(id) {\n            this.modelStateService.name(this.modelName).id(id).edit();\n        }\n    }, {\n        key: 'remove',\n        value: function remove() {\n            var _this4 = this;\n\n            var selected = this.selected();\n\n            swal({\n                title: 'Are you sure?',\n                text: selected.length + ' models will be deleted!',\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonText: 'Yes, delete them!',\n                confirmButtonColor: '#fb503b'\n            }, function (confirmed) {\n                if (!confirmed) {\n                    return;\n                }\n\n                selected.forEach(function (model) {\n                    return _this4.removeModel(model);\n                });\n            });\n        }\n    }, {\n        key: 'removeModel',\n        value: function removeModel(model) {\n            this.selectAll = false;\n\n            this.modelApi.delete(model.id);\n\n            for (var i = 0; i < this.models.length; i++) {\n                if (this.models[i] === model) {\n                    return this.models.splice(i, 1);\n                }\n            }\n        }\n    }, {\n        key: 'countSelected',\n        value: function countSelected() {\n            return this.selected().length;\n        }\n    }, {\n        key: 'isLocked',\n        value: function isLocked(model) {\n            return model._locked_for_user;\n        }\n    }, {\n        key: 'lockedBy',\n        value: function lockedBy(model) {\n            return model._locked_by;\n        }\n    }, {\n        key: 'displayAsLink',\n        value: function displayAsLink($first, model) {\n            return $first && !this.isLocked(model);\n        }\n    }, {\n        key: 'applyScopes',\n        value: function applyScopes($event) {\n            var $formInputs = $($event.target).parents('form').find(':input');\n            var params = {};\n\n            $formInputs.each(function (index, formInput) {\n                var $formInput = $(formInput);\n                var inputName = $formInput.attr('name');\n                var inputValue = $formInput.val();\n\n                if (!inputName || !inputValue) {\n                    return;\n                }\n\n                params[inputName] = inputValue;\n            });\n\n            this.loadModels(params);\n        }\n    }, {\n        key: 'pageChanged',\n        value: function pageChanged() {}\n    }, {\n        key: 'sortIcon',\n        value: function sortIcon(name) {\n            switch (this.attribute(name).order) {\n                case 'desc':\n                    return 'fa fa-sort-desc';\n                case 'asc':\n                    return 'fa fa-sort-asc';\n                default:\n                    return 'fa fa-sort';\n            }\n        }\n    }, {\n        key: 'sortBy',\n        value: function sortBy(name) {\n            _.forEach(this.attributes, function (attribute) {\n                if (attribute.name != name) {\n                    attribute.order = '';\n                }\n            });\n\n            var base = this;\n            var attribute = this.attribute(name);\n            attribute.order = this.nextOrderDirection(attribute.order);\n\n            switch (attribute.order) {\n                case 'desc':\n                    return this.models = _.sortBy(this.getModels(), function (model) {\n                        return base.sortByFunction(model, attribute);\n                    }).reverse();\n                case 'asc':\n                    return this.models = _.sortBy(this.getModels(), function (model) {\n                        return base.sortByFunction(model, attribute);\n                    });\n                default:\n                    return this.models = _.sortBy(this.getModels(), 'id');\n            }\n        }\n    }, {\n        key: 'sortByFunction',\n        value: function sortByFunction(model, attribute) {\n            var value = model[attribute.name];\n\n            if (attribute.type == \"datetime\") {\n                if (!value || !moment(value).isValid()) return \"\";\n\n                return moment(value).format('YYYY-MM-DD-HH-mm');\n            }\n\n            if (value && typeof value == 'number') {\n                return value;\n            }\n\n            return String(value).toLowerCase();\n        }\n    }, {\n        key: 'nextOrderDirection',\n        value: function nextOrderDirection(orderDirection) {\n            switch (orderDirection) {\n                case 'desc':\n                    return 'asc';\n                case 'asc':\n                    return '';\n                default:\n                    return 'desc';\n            }\n        }\n    }]);\n\n    return IndexResourceController;\n}();\n\nexports.default = IndexResourceController;\n\n},{}],58:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ModelStateService = function () {\n\n    /*@ngInject*/\n\n    function ModelStateService($state) {\n        _classCallCheck(this, ModelStateService);\n\n        this.$state = $state;\n    }\n\n    _createClass(ModelStateService, [{\n        key: 'name',\n        value: function name(modelName) {\n            this.modelName = modelName;\n\n            return this;\n        }\n    }, {\n        key: 'id',\n        value: function id(modelId) {\n            this.modelId = modelId;\n\n            return this;\n        }\n    }, {\n        key: 'index',\n        value: function index() {\n            this.go('index', this.modelStateName());\n        }\n    }, {\n        key: 'create',\n        value: function create() {\n            this.go('create' + this.modelStateName());\n        }\n    }, {\n        key: 'edit',\n        value: function edit() {\n            var stateName = 'edit' + this.modelStateName();\n            var stateParams = {\n                modelId: this.modelId\n            };\n\n            this.go(stateName, stateParams);\n        }\n\n        /* public */\n        /* private */\n\n    }, {\n        key: 'go',\n        value: function go(stateName) {\n            var stateParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n            this.$state.go(stateName, stateParams);\n        }\n    }, {\n        key: 'modelStateName',\n        value: function modelStateName() {\n            return this.modelName.replace('-', '').toLowerCase();\n        }\n    }]);\n\n    return ModelStateService;\n}();\n\nexports.default = ModelStateService;\n\n},{}],59:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _FormEvent = require('./../../common/forms/FormEvent');\n\nvar _FormEvent2 = _interopRequireDefault(_FormEvent);\n\nvar _FormDataReader = require('./../../common/forms/FormDataReader');\n\nvar _FormDataReader2 = _interopRequireDefault(_FormDataReader);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Intended for CreateResourceController & EditResourceController\n\nvar ResourceController = function () {\n    function ResourceController($injector, api, formDataService, contentBlockFactory, modelStateService, errorHandlerService) {\n        _classCallCheck(this, ResourceController);\n\n        this.$injector = $injector;\n        this.api = this.$injector.get('api');\n        this.formDataService = this.$injector.get('formDataService');\n        this.contentBlockFactory = this.$injector.get('contentBlockFactory');\n        this.contentBlockService = this.contentBlockFactory();\n        this.modelStateService = this.$injector.get('modelStateService');\n        this.errorHandlerService = this.$injector.get('errorHandlerService');\n        this.eventDispatcher = this.$injector.get('eventDispatcher');\n        this.$timeout = this.$injector.get('$timeout');\n        this.formDataReader = new _FormDataReader2.default(this.htmlForm());\n        this.inputs = {}; // ng-model Controller of the input fields will bind to this object\n        this.isBusy = false;\n    }\n\n    _createClass(ResourceController, [{\n        key: 'hasError',\n        value: function hasError(inputName) {\n            var formControl = this.form[inputName];\n\n            if (!formControl) {\n                return;\n            }\n\n            var atLeastOneError = Object.keys(formControl.$error).length > 0;\n            var isDirty = formControl.$dirty;\n\n            if (atLeastOneError && isDirty) {\n                return 'has-error';\n            }\n        }\n    }, {\n        key: 'catchServerSideErrors',\n        value: function catchServerSideErrors(err) {\n            if (!err.data || !err.data.errors) {\n                this.errorHandlerService.showUnexpected(err);\n                return;\n            }\n\n            var errors = err.data.errors;\n            console.error(err);\n            this.handleServerSideErrors(errors);\n        }\n    }, {\n        key: 'handleServerSideErrors',\n        value: function handleServerSideErrors(errors) {\n            this.clearServerSideErrors();\n            this.showServerSideErrors(errors);\n        }\n    }, {\n        key: 'showServerSideErrors',\n        value: function showServerSideErrors(errors) {\n            var _this = this;\n\n            _.forOwn(errors, function (value, key) {\n                var formControl = _this.form[key];\n                var errorMessage = value[0];\n\n                if (formControl) {\n                    _this.attachServerSideError(formControl, errorMessage);\n                    return;\n                }\n\n                toastr.error(errorMessage);\n            });\n        }\n    }, {\n        key: 'clearServerSideErrors',\n        value: function clearServerSideErrors() {\n            this.formControls().forEach(function (formControl) {\n                delete formControl.$error.mezzoServerSide;\n            });\n        }\n    }, {\n        key: 'attachServerSideError',\n        value: function attachServerSideError(formControl, errorMessage) {\n            formControl.$error.mezzoServerSide = errorMessage;\n            formControl.$dirty = true;\n        }\n    }, {\n        key: 'submitButtonClass',\n        value: function submitButtonClass() {\n            if (this.form.$invalid) {\n                return 'disabled';\n            }\n        }\n    }, {\n        key: 'formControls',\n        value: function formControls() {\n            return _.filter(this.form, function (potentialFormControl) {\n                var isFormControl = potentialFormControl && potentialFormControl.$error;\n\n                return isFormControl;\n            });\n        }\n    }, {\n        key: 'attemptSubmit',\n        value: function attemptSubmit() {\n            console.info('attemptSubmit()');\n\n            if (this.form.$invalid) {\n                console.warn('attemptSubmit() failed because of an invalid form', this.form);\n                this.dirtyFormControls(); // if a submit attempt failed because of an $invalid form all validation messages should be visible\n\n                return false;\n            }\n\n            return true;\n        }\n\n        // Override this method in extending class\n\n    }, {\n        key: 'doSubmit',\n        value: function doSubmit(formData) {\n            console.warn('doSubmit() should be implemented by the extending class!');\n            return Promise.resolve();\n        }\n    }, {\n        key: 'submit',\n        value: function submit() {\n            var _this2 = this;\n\n            if (this.isBusy) {\n                console.error('Resource controller is still busy. Cannot submit at the moment.');\n                return false;\n            }\n\n            this.isBusy = true;\n\n            console.info('submit()');\n\n            tinyMCE.triggerSave();\n\n            if (!this.attemptSubmit()) {\n                this.isBusy = false;\n                return false;\n            }\n\n            this.loading = true;\n            var formData = this.getFormData();\n\n            this.fireEvent('form.sending', formData);\n\n            this.doSubmit(formData).then(function (response) {\n                console.info('doSubmit().then()');\n\n                _this2.loading = false;\n            }).catch(function (err) {\n                console.info('doSubmit().catch()');\n\n                _this2.loading = false;\n\n                _this2.catchServerSideErrors(err);\n            }).finally(function () {\n                _this2.isBusy = false;\n            });\n        }\n    }, {\n        key: 'dirtyFormControls',\n        value: function dirtyFormControls() {\n            this.formControls().forEach(function (formControl) {\n                formControl.$dirty = true;\n            });\n        }\n    }, {\n        key: 'getFormData',\n        value: function getFormData() {\n            return this.formDataReader.read();\n        }\n    }, {\n        key: 'htmlForm',\n        value: function htmlForm() {\n            return $('form[name=\"vm.form\"]');\n        }\n    }, {\n        key: 'tinymceOptions',\n        value: function tinymceOptions() {\n            return {\n                plugins: [\"link\"],\n                toolbar: \"undo redo | bold italic underline | link\",\n                menubar: \"\",\n                elementpath: false\n            };\n        }\n    }, {\n        key: 'fireEvent',\n        value: function fireEvent(name, data) {\n            return this.eventDispatcher.fire(new _FormEvent2.default(name, data, this.htmlForm()[0]));\n        }\n    }, {\n        key: 'getInput',\n        value: function getInput(name) {\n            return this.inputs[name];\n        }\n    }]);\n\n    return ResourceController;\n}();\n\nexports.default = ResourceController;\n\n},{\"./../../common/forms/FormDataReader\":15,\"./../../common/forms/FormEvent\":16}],60:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ShowResourceController =\n\n/*@ngInject*/\nfunction ShowResourceController() {\n    _classCallCheck(this, ShowResourceController);\n};\n\nexports.default = ShowResourceController;\n\n},{}],61:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FormDataService = function () {\n    function FormDataService() {\n        _classCallCheck(this, FormDataService);\n    }\n\n    _createClass(FormDataService, [{\n        key: 'form',\n        value: function form() {\n            return $('form[name=\"vm.form\"]');\n        }\n    }, {\n        key: 'transform',\n        value: function transform(data) {\n            var stripped = this.unfoldData(data);\n\n            stripped = this.unpackRelationInputs(this.form()[0], stripped);\n            stripped = this.formatTimestamps(stripped);\n\n            //TODO: Move this into a class\n            return {\n                stripped: _.cloneDeep(stripped),\n                flattened: this.flattenObject(_.cloneDeep(stripped))\n            };\n        }\n    }, {\n        key: 'unfoldData',\n        value: function unfoldData(formData) {\n            var cleaned = {};\n\n            if (!formData || (typeof formData === 'undefined' ? 'undefined' : _typeof(formData)) !== 'object') return formData;\n\n            if (formData.data) {\n                return this.unfoldData(formData.data);\n            }\n\n            for (var i in formData) {\n                cleaned[i] = this.unfoldData(formData[i]);\n            }\n\n            return cleaned;\n        }\n    }, {\n        key: 'unpackRelationInputs',\n        value: function unpackRelationInputs(form, data) {\n            var clean = _.clone(data);\n            $(form).find('select').each(function (id, elem) {\n                //html input element is not in response or already an id\n                if (!clean[name] || _typeof(clean[name]) !== 'object') return true;\n\n                // not an array\n                if (!clean[name][0]) {\n                    clean[name] = clean[name].id;\n                    return true;\n                }\n\n                //unpack the array of relation elements\n                var ids = [];\n                for (var i in clean[name]) {\n                    ids.push(clean[name][i].id);\n                }\n\n                clean[name] = ids;\n            });\n\n            //unpack checkboxes\n            for (var i in _.clone(clean)) {\n                var attribute = clean[i];\n\n                if (!_.isObject(attribute) || !attribute[0]) continue;\n\n                //run through the checkbox array (each relation entry)\n                for (var j in attribute) {\n                    var relationEntry = attribute[j];\n                    var checkboxName = i + '[' + relationEntry.id + ']';\n                    var selector = 'input[type=checkbox][name=\"' + checkboxName + '\"]';\n\n                    if ($(selector).length == 0) continue;\n\n                    clean[checkboxName] = true;\n                }\n            }\n\n            return clean;\n        }\n    }, {\n        key: 'formatTimestamps',\n        value: function formatTimestamps(formData) {\n            var cleaned = {};\n\n            //Unpack everything\n            if (formData && _.isArray(formData)) {\n                cleaned = [];\n                for (var i in formData) {\n                    cleaned[i] = this.formatTimestamps(formData[i]);\n                }\n                return cleaned;\n            }\n\n            if (formData && _.isObject(formData)) {\n                for (var i in formData) {\n                    cleaned[i] = this.formatTimestamps(formData[i]);\n                }\n                return cleaned;\n            }\n\n            //Only the atomic values will land here (science bitch!)\n\n            if (typeof formData == \"string\" && formData.match(/\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}/)) {\n                return moment(formData).format('DD.MM.YYYY HH:mm');\n            }\n\n            return formData;\n        }\n\n        // Source: https://gist.github.com/penguinboy/762197\n\n    }, {\n        key: 'flattenObject',\n        value: function flattenObject(ob) {\n            var toReturn = {};\n\n            for (var i in ob) {\n                if (!ob.hasOwnProperty(i)) continue;\n\n                if (_typeof(ob[i]) == 'object') {\n                    var flatObject = this.flattenObject(ob[i]);\n                    for (var x in flatObject) {\n                        if (!flatObject.hasOwnProperty(x)) continue;\n\n                        toReturn[i + '.' + x] = flatObject[x];\n                    }\n                } else {\n                    toReturn[i] = ob[i];\n                }\n            }\n            return toReturn;\n        }\n    }]);\n\n    return FormDataService;\n}();\n\nexports.default = FormDataService;\n\n},{}],62:[function(require,module,exports){\n'use strict';\n\nvar _stateProvider = require('./stateProvider');\n\nvar _stateProvider2 = _interopRequireDefault(_stateProvider);\n\nvar _formDataService = require('./formDataService');\n\nvar _formDataService2 = _interopRequireDefault(_formDataService);\n\nvar _ModelStateService = require('./ModelStateService');\n\nvar _ModelStateService2 = _interopRequireDefault(_ModelStateService);\n\nvar _registerStateDirective = require('./registerStateDirective');\n\nvar _registerStateDirective2 = _interopRequireDefault(_registerStateDirective);\n\nvar _IndexResourceController = require('./IndexResourceController');\n\nvar _IndexResourceController2 = _interopRequireDefault(_IndexResourceController);\n\nvar _CreateResourceController = require('./CreateResourceController');\n\nvar _CreateResourceController2 = _interopRequireDefault(_CreateResourceController);\n\nvar _EditResourceController = require('./EditResourceController');\n\nvar _EditResourceController2 = _interopRequireDefault(_EditResourceController);\n\nvar _ShowResourceController = require('./ShowResourceController');\n\nvar _ShowResourceController2 = _interopRequireDefault(_ShowResourceController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = angular.module('MezzoResources', []);\n\n_module.provider('$stateProvider', _stateProvider2.default);\n_module.service('formDataService', _formDataService2.default);\n_module.service('modelStateService', _ModelStateService2.default);\n_module.directive('mezzoRegisterState', _registerStateDirective2.default);\n_module.controller('IndexResourceController', _IndexResourceController2.default);\n_module.controller('CreateResourceController', _CreateResourceController2.default);\n_module.controller('EditResourceController', _EditResourceController2.default);\n_module.controller('ShowResourceController', _ShowResourceController2.default);\n\n},{\"./CreateResourceController\":54,\"./EditResourceController\":55,\"./IndexResourceController\":57,\"./ModelStateService\":58,\"./ShowResourceController\":60,\"./formDataService\":61,\"./registerStateDirective\":63,\"./stateProvider\":64}],63:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = registerStateDirective;\n\nvar _Action = require('./Action');\n\nvar _Action2 = _interopRequireDefault(_Action);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*@ngInject*/\nfunction registerStateDirective($location, $stateProvider, hasController) {\n    return {\n        restrict: 'A',\n        link: link\n    };\n\n    function link(scope, element, attributes) {\n        var uri = attributes.uri;\n        var page = attributes.page;\n        var action = attributes.action;\n\n        registerState(uri, page, action);\n\n        if (action === _Action2.default.CREATE) {\n            registerState(uri.replace('create', 'edit'), page.replace('Create', 'Edit'), _Action2.default.EDIT);\n        }\n\n        initSidebarBehaviour(element);\n    }\n\n    function registerState(uri, page, action) {\n        var stateName = page.toLowerCase();\n        var url = urlForAction(uri, action);\n        var controller = controllerForPage(page);\n\n        if (!controller) {\n            controller = controllerForAction(action);\n        }\n\n        $stateProvider.state(stateName, {\n            url: url,\n            templateUrl: '/mezzo/' + uri + '.html',\n            controller: controller,\n            controllerAs: 'vm'\n        });\n    }\n\n    function controllerForPage(page) {\n        var controllerName = page + 'Controller';\n\n        if (hasController(controllerName)) {\n            console.info('Found custom ' + controllerName);\n\n            return controllerName;\n        }\n\n        return null;\n    }\n\n    function controllerForAction(action) {\n        if (action === _Action2.default.INDEX) {\n            return 'IndexResourceController';\n        }\n\n        if (action === _Action2.default.CREATE) {\n            return 'CreateResourceController';\n        }\n\n        if (action === _Action2.default.EDIT) {\n            return 'EditResourceController';\n        }\n\n        if (action === _Action2.default.SHOW) {\n            return 'ShowResourceController';\n        }\n\n        throw new Error('No suitable Controller found for action \"' + action + '\"!');\n    }\n\n    function urlForAction(uri, action) {\n        var url = '/mezzo/' + uri;\n\n        if (action === _Action2.default.EDIT) {\n            return url + '/:modelId';\n        }\n\n        return url;\n    }\n\n    function initSidebarBehaviour(element) {\n        var $element = $(element);\n        var url = $location.url();\n        var href = '/' + $element.attr('href');\n\n        if (url === href) {\n            $element.addClass('active').parents('li.has-pages').addClass('opened');\n        }\n\n        $element.click(function () {\n            $('a[data-mezzo-register-state]').removeClass('active');\n            $element.addClass('active');\n        });\n    }\n}\n\n},{\"./Action\":53}],64:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = stateProvider;\n/*@ngInject*/\nfunction stateProvider($stateProvider) {\n    this.$get = $get;\n\n    function $get() {\n        return $stateProvider;\n    }\n}\n\n},{}],65:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SubscriptionsController = function () {\n\n    /*@ngInject*/\n\n    function SubscriptionsController(api, $scope, $rootScope, $element, eventDispatcher) {\n        _classCallCheck(this, SubscriptionsController);\n\n        console.log('subscription controller');\n\n        this.api = api;\n        this.modelApi = api.model('Subscription');\n        this.$form = $element.parents('form')[0];\n\n        var base = this;\n\n        eventDispatcher.on('form.received', function (event, payload) {\n            base.fill(payload.data, payload.form);\n        });\n    }\n\n    _createClass(SubscriptionsController, [{\n        key: 'fill',\n        value: function fill(data, form) {\n            if (form != this.$form) {\n                return;\n            }\n\n            this.subscriptions = data.subscriptions;\n\n            this.sort();\n        }\n    }, {\n        key: 'subscribedUntilString',\n        value: function subscribedUntilString(subscription) {\n            return this.subscribedUntilDate(subscription).format('DD.MM.YYYY HH:mm');\n        }\n    }, {\n        key: 'isCancelled',\n        value: function isCancelled(subscription) {\n            return subscription.cancelled == 1;\n        }\n    }]);\n\n    return SubscriptionsController;\n}();\n\nexports.default = SubscriptionsController;\n\n},{}],66:[function(require,module,exports){\n'use strict';\n\nvar _subscriptionsDirective = require('./subscriptionsDirective');\n\nvar _subscriptionsDirective2 = _interopRequireDefault(_subscriptionsDirective);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = angular.module('MezzoUsers', []);\n\n_module.directive('mezzoUserSubscriptions', _subscriptionsDirective2.default);\n\n},{\"./subscriptionsDirective\":67}],67:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = subscriptionsDirective;\n\nvar _SubscriptionsController = require('./SubscriptionsController');\n\nvar _SubscriptionsController2 = _interopRequireDefault(_SubscriptionsController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*@ngInject*/\nfunction subscriptionsDirective() {\n    return {\n        restrict: 'E',\n        templateUrl: '/mezzolabs/mezzo/cockpit/templates/subscriptionsDirective.html',\n        scope: {\n            naming: '@'\n        },\n        controller: _SubscriptionsController2.default,\n        controllerAs: 'vm',\n        bindToController: true\n    };\n}\n\n},{\"./SubscriptionsController\":65}],68:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = config;\n\nvar _customRoutes = require(\"./customRoutes\");\n\nvar _customRoutes2 = _interopRequireDefault(_customRoutes);\n\nvar _lang = require(\"./lang\");\n\nvar _lang2 = _interopRequireDefault(_lang);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*@ngInject*/\nfunction config($locationProvider, $httpProvider, $stateProvider, $translateProvider) {\n    $httpProvider.defaults.headers.common.Accept = 'application/vnd.MezzoLabs.v1+json';\n\n    (0, _customRoutes2.default)($stateProvider);\n    (0, _lang2.default)($translateProvider);\n\n    $locationProvider.html5Mode(true);\n}\n\n},{\"./customRoutes\":69,\"./lang\":71}],69:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = customRoutes;\n\nvar _EditSubscriptionsController = require('./../modules/resource/EditSubscriptionsController');\n\nvar _EditSubscriptionsController2 = _interopRequireDefault(_EditSubscriptionsController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*@ngInject*/\nfunction customRoutes($stateProvider) {\n\n    $stateProvider.state('subscriptionsuser', {\n        url: '/mezzo/user/user/subscriptions/:modelId',\n        templateUrl: '/mezzo/user/user/subscriptions.html',\n        controller: _EditSubscriptionsController2.default,\n        controllerAs: 'vm'\n    });\n}\n\n},{\"./../modules/resource/EditSubscriptionsController\":56}],70:[function(require,module,exports){\n'use strict';\n\n$(function () {\n    $('.sidebar-pin').click(function () {\n        var sidebarIsPinned = $('body').hasClass('sidebar-pinned');\n\n        if (sidebarIsPinned) {\n            $('body').addClass('sidebar-unpinned').removeClass('sidebar-pinned');\n            $(this).addClass('fa-circle-o').removeClass('fa-dot-circle-o');\n        } else {\n            $('body').addClass('sidebar-pinned').removeClass('sidebar-unpinned');\n            $(this).addClass('fa-dot-circle-o').removeClass('fa-circle-o');\n        }\n    });\n\n    $('#sidebar').mouseenter(function () {\n        $('body').addClass('sidebar-mousein').removeClass('sidebar-mouseout');\n    });\n\n    $('#sidebar').mouseleave(function () {\n        $('body').addClass('sidebar-mouseout').removeClass('sidebar-mousein');\n\n        if ($('body').hasClass('sidebar-unpinned')) $('.nav-main .opened').removeClass('opened');\n    });\n\n    $('.nav-main > li.has-pages > a span').click(function () {\n        $(this).parents('li').toggleClass('opened');\n    });\n\n    $('.trigger-quickview').click(function () {\n        quickviewVisible(!quickviewIsVisible());\n        return false;\n    });\n\n    $('.mezzo__filemanager_container .btn-refresh').click(function () {\n        quickviewVisible(true);\n    });\n\n    $('#quickview .btn-close').click(function () {\n        quickviewVisible(false);\n    });\n\n    $('#content-main, #view-overlay').click(function () {\n        quickviewVisible(false);\n    });\n\n    function quickviewIsVisible() {\n        return $('#quickview').hasClass('opened');\n    }\n\n    function quickviewVisible(open) {\n        if (open) {\n            $('#quickview').addClass('opened');\n            $('#view-overlay').addClass('opened');\n        } else {\n            $('#quickview').removeClass('opened');\n            $('#view-overlay').removeClass('opened');\n        }\n    }\n\n    /**\n     * Form stuff\n     */\n    $.fn.editable.defaults.mode = 'inline';\n\n    $.fn.editableform.buttons = '<button type=\"submit\" class=\"btn btn-primary btn-sm editable-submit\">' + '<i class=ion-checkmark></i>' + '</button>' + '<button type=\"button\" class=\"btn btn-default btn-sm editable-cancel\">' + '<i class=\"ion-close\"></i>' + '</button>';\n\n    $('.editable').editable();\n\n    var noUiView = $('div[ui-view]').length === 0;\n\n    if (noUiView) {\n        console.info('Backend Rendered Page detected!');\n\n        $('a[href]:not([data-mezzo-href-prevent])').click(function () {\n            window.location.reload();\n        });\n    }\n});\n\nfunction quickviewVisible(open) {\n    if (open) {\n        $('#quickview').addClass('opened');\n        $('#view-overlay').addClass('opened');\n    } else {\n        $('#quickview').removeClass('opened');\n        $('#view-overlay').removeClass('opened');\n    }\n}\n\n},{}],71:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = addTranslations;\n/*@ngInject*/\nfunction addTranslations($translateProvider, languageService) {\n\n    $translateProvider.translations('de', {\n        'ATTRIBUTES.GENDER': { m: 'Herr', f: 'Frau' },\n        'FOO': 'Dies ist ein Absatz'\n    });\n\n    $translateProvider.preferredLanguage('de');\n}\n\n},{}],72:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = run;\n/*@ngInject*/\nfunction run($rootScope) {\n    showStateChangeErrors();\n\n    function showStateChangeErrors() {\n        $rootScope.$on('$stateChangeError', onStateChangeError);\n    }\n\n    function onStateChangeError(event, toState, toParams, fromState, fromParams, error) {\n        console.error(event, toState, toParams, fromState, fromParams, error);\n\n        var messageBuilder = ['<strong>Event:</strong> ' + event.name, '<strong>To state:</strong> ' + JSON.stringify(toState), '<strong>To params:</strong> ' + JSON.stringify(toParams), '<strong>From state:</strong> ' + JSON.stringify(fromState), '<strong>From params:</strong> ' + JSON.stringify(fromParams), '<strong>Error:</strong> ' + JSON.stringify(error)];\n        var message = messageBuilder.join('<br>');\n\n        swal({\n            title: 'Unexpected Error :(',\n            html: message,\n            type: 'error'\n        });\n    }\n}\n\n},{}]},{},[1]);\n"
  ],
  "file": "app.js",
  "sourceRoot": "/source/"
}